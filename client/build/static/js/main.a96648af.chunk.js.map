{"version":3,"sources":["components/Footer.js","redux/actions/authActions.js","components/Notification.js","components/NotificationsPanel.js","components/Header.js","pages/Home.js","redux/actions/boardActions.js","components/BoardIndividual.js","components/Nav.js","components/LateralMenu.js","components/helpers/Spinner.js","pages/MyDesk.js","components/LogIn.js","pages/SignUp.js","pages/Sign.js","redux/actions/taskPlannerActions.js","redux/actions/taskActions.js","redux/actions/commentActions.js","components/Comment.js","components/TaskModal.js","components/Task.js","components/Taskplanner.js","components/UserAdmin.js","components/Archive.js","components/Board.js","App.js","redux/reducers/authReducer.js","redux/reducers/boardReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["connect","state","userLogged","authReducer","props","className","style","backgroundImage","class","to","xmlns","viewBox","fill","fillOpacity","d","desklyAlert","alertTitle","alertMessage","alertType","a","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","pauseOnHover","showIcon","authActions","signUpUser","user","dispatch","getState","axios","post","response","data","validationError","error","payload","firstName","console","log","signInUSer","userToSignIn","success","signInLocalStorage","userLocalStorage","get","headers","token","status","signOut","inviteUserToBoard","email","boardId","getSate","put","checkNotifications","userLs","acceptJoinToBoard","board","notification","rejectJoinToBoard","setUserComponents","mapDispatchToProps","setNotificationsState","notificationsState","notif","sendAcceptNotification","idNotif","resp","notificationsFiltered","filter","_id","owner","lastName","onClick","notifButton","setNotifButton","useState","classNotificationPanel","useEffect","activeCheckNotifications","reloadNotifications","setInterval","clearInterval","length","map","i","exact","id","clipPathUnits","boardActions","deleteBoard","delete","addBoard","description","editBoard","updateInput","getBoardsFromUser","getUsersFromBoard","idBoard","users","userAdmin","admins","getAdminsFromBoard","getBoard","boardSingle","setBoardSingle","getBoardSingle","oneBoard","color","menuLateral","setMenuLateral","classMenuLateral","Spinner","boards","boardReducer","boardsAdminArray","boardsOwnerArray","boardsUserArray","loading","inputBoard","setInputBoard","newBoardModal","setNewBoardModal","setLoading","readInputBoard","e","field","target","name","value","reloadTaskPlanner","userFirstName","userLastName","userImg","img","display","src","alt","placeholder","onChange","logIn","setLogIn","oculto","setOculto","input","prop","googleUser","userFacebook","preventDefault","password","respuestaGoogle","profileObj","googleId","google","buttonanimation","buttonSign","autoComplete","render","renderProps","disabled","clientId","onSuccess","onFailure","cookiePolicy","setUser","mistakes","setMistakes","readInputUser","sendValueUser","userGen","Object","values","some","details","prevState","context","label","responseGoogle","givenName","familyName","imageUrl","Sign","setButtonSign","setbuttonanimation","classFormSign","classFormSign2","changeStatesButtons","section","LogIn","taskPlannerActions","getTaskPlannerFromBoard","deleteTaskPlanner","idTaskPlanner","editTaskPlanner","recycleTaskPlanner","addTaskPlanner","taskPlanner","taskActions","tasksFromTaskplanner","taskPlannerId","addTask","taskToAdd","editTask","taskEditId","taskEdit","deleteTask","recycleTask","recycle","commentActions","getComments","taskId","comments","addComment","newComment","userToken","editComment","editedComment","deleteComment","commentId","commentsUserArray","comment","idTask","setCommentsState","userCompleteName","editButtonShow","setEditButtonShow","deleteButton","setDeleteButton","idComment","editionComment","setEditionComment","checkUserOwnerComment","sendEditComment","sendDeleteComment","userId","userName","task","setShow","show","setNewComment","commentsState","editDescription","setEditDescription","newDescription","setNewDescription","getAllComments","sendComment","valor","sendDescription","descriptionText","isOpen","onRequestClose","contentLabel","overlayClassName","cursor","imOwner","onKeyDown","key","allTasks","setAllTasks","verify","setLoanding","editionTask","setEditionTask","editButton","setEditButton","sendEdit","verifyTask","elementToEdit","editedTasks","sendDeleteTask","arrayFiltered","imAdmin","backgroundColor","preloader","setPreloader","open","setOpen","newTitle","setNewTitle","newTask","setNewTask","editTitle","setEditTitle","setProgress","fetchAllTasks","taskplanner","tasksProgress","enter","condition","sendValues","edit","trim","taskplannerId","tasks","archived","erase","admin","setAdmin","visible","setVisible","indexOf","confirmAdmin","allTasksPlanner","filterTaskplanners","setFilterTaskplanners","margin","flexDirection","alignItems","height","width","addUserToBoard","deleteBoardOwner","taskPlannersArray","setAllTasksPlanner","update","setUpdate","newInvite","setNewInvite","idParams","match","params","setBoard","setUpdateInput","openInvite","setOpenInvite","boardUsers","setBoardUsers","setAdmins","openModal","setOpenModal","history","push","find","String","tasksFetch","usersFetch","addUser","titleTaskPlanner","visibility","reLoad","localStorage","getItem","path","component","Home","MyDesk","Board","SignUp","initialState","action","setItem","JSON","stringify","userPic","clear","boardAdminArray","boardOwnerId","idComents","taskPlanners","boardIdUser","rootReducer","combineReducers","desklyStore","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"yOAwCeA,eALS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAGvBF,EApCA,SAACI,GACZ,OACI,mCACI,sBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAaC,MAAO,CAAEC,gBAAiB,kFACtD,2CAEJ,sBAAKF,UAAU,gBAAf,UACI,8CACA,gCACI,sBAAMG,MAAM,sCAAZ,sBACA,cAAC,IAAD,CAAiBH,UAAU,gBAC3B,cAAC,IAAD,CAAUA,UAAU,sBAG5B,sBAAKA,UAAU,aAAf,UACI,4CACA,cAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,YAAvB,kBACCD,EAAMF,YAAc,mCACjB,cAAC,IAAD,CAAMO,GAAG,UAAUJ,UAAU,YAA7B,wBACFD,EAAMF,YACJ,cAAC,IAAD,CAAMO,GAAG,QAAQJ,UAAU,YAA3B,2BAGZ,qBAAKK,MAAM,6BAA6BC,QAAQ,eAAeN,UAAU,YAAzE,SACI,sBAAMO,KAAK,UAAUC,YAAY,IAAIC,EAAE,6M,sEC5BjDC,EAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DA+IFC,EAlIK,CAChBC,WAAY,SAACC,GACT,8CAAO,WAAOC,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMC,KAAK,8CAA+CJ,GAFlF,YAEOK,EAFP,QAGcC,KAAKC,gBAHnB,yCAIYF,EAASC,KAAKC,iBAJ1B,OAKYF,EAASC,KAAKE,MACrB7B,EAAY,QAAS0B,EAASC,KAAKE,MAAO,WAE1CP,EAAS,CAAEb,KAAM,WAAYqB,QAASJ,EAASC,OAC/C3B,EAAY0B,EAASC,KAAKD,SAASK,UAAxB,qBAAwD,YATxE,yDAYCC,QAAQC,IAAR,MACAjC,EAAY,QAAS,kDAAmD,UAbzE,0DAAP,yDAkBJkC,WAAY,SAACC,GACT,8CAAO,WAAOb,EAAUC,GAAjB,eAAAnB,EAAA,+EAGwBoB,IAAMC,KAAK,4CAA6CU,GAHhF,QAGOT,EAHP,QAIeC,KAAKS,SAGfd,EAAS,CAAEb,KAAM,WAAYqB,QAASJ,EAASC,KAAKD,WACpD1B,EAAY0B,EAASC,KAAKD,SAASK,UAAxB,qBAAwD,YAHnE/B,EAAY,OAAQ0B,EAASC,KAAKE,MAAO,UAL9C,gDAWC7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MAZD,yDAAP,yDAiBJI,mBAAoB,SAACC,GACjB,8CAAO,WAAOhB,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMe,IAAI,8CAA+C,CAC5EC,QAAS,CAAE,cAAiB,UAAYF,KAH7C,OAEOZ,EAFP,OAKCJ,EAAS,CAAEb,KAAM,WAAYqB,QAAQ,2BAAMJ,EAASC,KAAKD,UAArB,IAA+Be,MAAOH,MAL3E,gDAO+B,MAA1B,KAAMZ,SAASgB,QAChB1C,EAAY,QAAS,uDAExBsB,EAAS,CAAEb,KAAM,gBAVlB,yDAAP,yDAeJkC,QAAS,WACL,OAAO,SAACrB,EAAUC,GACdvB,EAAY,WAAY,2BAA4B,QACpDsB,EAAS,CAAEb,KAAM,kBAIzBmC,kBAAmB,SAACC,EAAOC,GACvB,8CAAO,WAAOxB,EAAUyB,GAAjB,SAAA3C,EAAA,+EAEOoB,IAAMwB,IAAI,kDAAoDH,EAAO,CAAEC,YAF9E,sDAIC9C,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MALD,wDAAP,yDAUJgB,mBAAoB,SAACC,GACjB,8CAAO,WAAO5B,EAAUyB,GAAjB,eAAA3C,EAAA,+EAEwBoB,IAAMe,IAAI,yDAA0D,CACvFC,QAAS,CAAE,cAAiB,UAAYU,EAAOT,SAHpD,cAEOf,EAFP,yBAKQA,EAASC,KAAKD,UALtB,gCAOC1B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MARD,yDAAP,yDAaJkB,kBAAmB,SAACL,EAASI,GAEzB,8CAAO,WAAO5B,EAAUyB,GAAjB,eAAA3C,EAAA,+EAEwBoB,IAAMe,IAAI,oDAAsDO,EAAS,CAC5FN,QAAS,CAAE,cAAiB,UAAYU,EAAOT,SAHpD,cAEOf,EAFP,OAKCJ,EAAS,CAAEb,KAAM,aAAcqB,QAASJ,EAASC,KAAKD,SAAS0B,QALhE,kBAMQ1B,EAASC,KAAKD,SAAS2B,cAN/B,gCAQCrD,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MATD,yDAAP,yDAcJqB,kBAAmB,SAACR,EAASI,GACzB,8CAAO,WAAO5B,EAAUyB,GAAjB,eAAA3C,EAAA,+EAEwBoB,IAAMe,IAAI,8CAA+CO,EAAU,CACtFN,QAAS,CAAE,cAAiB,UAAYU,EAAOT,SAHpD,cAEOf,EAFP,yBAKQA,EAASC,KAAKD,SAAS2B,cAL/B,gCAOCrB,QAAQC,IAAR,MAPD,yDAAP,yDAYJsB,kBAAmB,SAACd,GAChB,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMe,IAAI,qDAAsD,CACnFC,QAAS,CAAE,cAAiB,UAAYC,KAH7C,OAEOf,EAFP,OAKCJ,EAAS,CAAEb,KAAM,kBAAmBqB,QAAQ,eAAMJ,EAASC,KAAKD,YALjE,gDAOC1B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MARD,yDAAP,0DC1FFuB,EAAqB,CACvBL,kBAAmBhC,EAAYgC,kBAC/BG,kBAAmBnC,EAAYmC,mBAGpBrE,eAXS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cASEqE,EAAzBvE,EAzCM,SAACI,GAElB,IAAQF,EAAuGE,EAAvGF,WAAYgE,EAA2F9D,EAA3F8D,kBAAmBG,EAAwEjE,EAAxEiE,kBAAmBG,EAAqDpE,EAArDoE,sBAAuBC,EAA8BrE,EAA9BqE,mBAAoBC,EAAUtE,EAAVsE,MAG/FC,EAAsB,uCAAG,WAAOC,EAASC,GAAhB,iBAAA1D,EAAA,0DAGvB0D,EAHuB,gCAINX,EAAkBU,EAAS1E,GAJrB,OAIvBuC,EAJuB,OAKvBqC,EAAwBL,EAAmBM,QAAO,SAAAL,GAAK,OAAIA,EAAMM,MAAQvC,KALlD,8BAOvBqC,EAAwBL,EAAmBM,QAAO,SAAAL,GAAK,OAAIA,EAAMM,MAAQN,KAPlD,UAQNL,EAAkBO,EAAS1E,GARrB,QAQvBuC,EARuB,eAW3B+B,EAAsBM,GAXK,4CAAH,wDAa5B,OACI,sBAAKzE,UAAU,eAAf,UACI,yEAA4CqE,EAAMpD,MAAlD,QAA8DoD,EAAMO,MAAMnC,UAAY,IAAM4B,EAAMO,MAAMC,SAAxG,OACA,gCAEI,wBAAQC,QAAS,kBAAMR,EAAuBD,EAAMM,KAAK,IAAzD,oBACA,wBAAQG,QAAS,kBAAMR,EAAuBD,EAAMM,KAAK,IAAzD,8BC0BVT,EAAqB,CACvBP,mBAAoB9B,EAAY8B,oBAGrBhE,eAVS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAQEqE,EAAzBvE,EApDY,SAACI,GAExB,IAAQF,EAAgEE,EAAhEF,WAAY8D,EAAoD5D,EAApD4D,mBAAoBoB,EAAgChF,EAAhCgF,YAAaC,EAAmBjF,EAAnBiF,eACrD,EAAoDC,mBAAS,IAA7D,mBAAOb,EAAP,KAA2BD,EAA3B,KAEIe,EAAyBH,EAAc,wBAA0B,yBAErEI,qBAAU,WACNC,IACA,IAAMC,EAAsBC,aAAY,WACpCF,MACD,KACH,OAAO,WAAQG,cAAcF,MAE9B,IAEH,IAAMD,EAAwB,uCAAG,4BAAAtE,EAAA,0DACzBf,EAAMF,WADmB,gCAEF8D,EAAmB9D,GAFjB,QAEnBuC,EAFmB,SAIrB+B,EAAsB/B,GAJD,2CAAH,qDAQ9B,OACI,sBAAKpC,UAAWkF,EAAhB,UAEI,sBAAKlF,UAAU,sBAAf,UACI,sBAAMA,UAAU,qBAAhB,2BACA,sBAAMA,UAAU,0CAA0C8E,QAAS,kBAAME,GAAe,IAAxF,sBAIAZ,EAAmBoB,OAAS,GACzBpB,EAAmBqB,KAAI,SAACpB,EAAOqB,GAC9B,OAAO,cAAC,EAAD,CAAsBrB,MAAOA,EAAOF,sBAAuBA,EAAuBC,mBAAoBA,GAAnFsB,YCdxCxB,EAAqB,CACvBb,QAASxB,EAAYwB,SAGV1D,eATS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAOEqE,EAAzBvE,EA3BA,SAACI,GACZ,OACI,sBAAKC,UAAU,mBAAf,UACI,cAAC,IAAD,CAAS2F,OAAK,EAACvF,GAAG,IAAIJ,UAAU,cAAhC,kBACCD,EAAMF,YAAc,qCACjB,cAAC,IAAD,CAASO,GAAG,UAAUJ,UAAU,cAAhC,oBACA,cAAC,IAAD,CAAOI,GAAG,IAAIJ,UAAU,cAAxB,SAAsC,sBAAM8E,QAAS,kBAAM/E,EAAMsD,WAA3B,4BACxCtD,EAAMF,YAAc,mCAClB,cAAC,IAAD,CAASO,GAAG,QAAQJ,UAAU,cAA9B,uBAKJ,cAAC,EAAD,IACA,qBAAKA,UAAU,sBCsEZL,eALS,SAAAC,GACpB,MAAM,CACFC,WAAYD,EAAME,YAAYD,cAGvBF,EArFF,SAACI,GACV,IAAOF,EAAcE,EAAdF,WACP,OACI,sBAAKG,UAAU,aAAf,UACI,cAAC,EAAD,IAOA,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,gCACI,qBAAKA,UAAU,aAAaC,MAAO,CAAEC,gBAAiB,kFACtD,2CAEJ,wHACEL,GAAc,cAAC,IAAD,CAAMO,GAAG,QAAT,SAAiB,wBAAQJ,UAAU,iBAAlB,2BAErC,qBAAKA,UAAU,YAAYC,MAAO,CAAEC,gBAAiB,4EAEzD,gCACI,sBAAKF,UAAU,OAAf,UACI,wDACA,qBAAKA,UAAU,QAAQC,MAAO,CAAEC,gBAAiB,4GACjD,sBAAKF,UAAU,aAAf,UACI,qBAAKA,UAAU,YACf,yLAGR,8BACI,0BAAU4F,GAAG,OAAOC,cAAc,oBAAlC,SACI,sBAAM7F,UAAU,MAAMS,EAAE,sDAGhC,qBAAKT,UAAU,wBAAf,SACI,qBAAKA,UAAU,SAAf,SAAwB,kDAE5B,sBAAKA,UAAU,iCAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,gCACI,sBAAMA,UAAU,0BAAhB,uBACA,wCACA,iEAEJ,gCACI,sBAAMA,UAAU,0BAAhB,iBACA,qCACA,kFAEJ,gCACI,sBAAMA,UAAU,0BAAhB,sBACA,uCACA,wGAGR,sBAAKA,UAAU,sBAAf,UACI,gCACI,sBAAMA,UAAU,0BAAhB,kBACA,sCACA,2HAEJ,gCACI,sBAAMA,UAAU,0BAAhB,oBACA,wCACA,gHAIZ,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,UAAUC,MAAO,CAAEC,gBAAiB,mHAI/D,cAAC,EAAD,U,QC9ENQ,EAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DA6IFkE,EAjIM,CACjBC,YAAa,SAACH,EAAGzC,GACb,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAM8D,OAAO,6CAA+CJ,EAAI,CAAC1C,QAAS,CAC7F,cAAiB,UAAYC,KAHlC,QAEOf,EAFP,QAKeC,KAAKS,QAGfd,EAAS,CAACb,KAAM,gBAAiBqB,QAAQJ,EAASC,KAAKD,SAASuC,MAFhEjE,EAAY,OAAQ0B,EAASC,KAAKE,MAAO,UAN9C,gDAWC7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAR,MAZD,yDAAP,yDAgBJsD,SAAU,SAACnC,GACP,IAAQ7C,EAA8B6C,EAA9B7C,MAAOiF,EAAuBpC,EAAvBoC,YAAa/C,EAAUW,EAAVX,MAC5B,IACI,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMC,KAAK,4CAA6C,CAAElB,QAAOiF,eAAe,CACnGhD,QAAS,CACL,cAAiB,UAAYC,KAHlC,QACGf,EADH,QAMWC,KAAKS,QAGfd,EAAS,CAAEb,KAAM,aAAcqB,QAASJ,EAASC,KAAKD,WAFtD1B,EAAY,OAAQ0B,EAASC,KAAKE,MAAO,UAP1C,2CAAP,wDAaF,MAAOA,GACL7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAIJ,KAGpB4D,UAAU,SAACP,EAAIQ,EAAajD,GACxB,IAAOlC,EAAsBmF,EAAtBnF,MAAOiF,EAAeE,EAAfF,YACd,IACI,8CAAO,WAAOlE,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMwB,IAAI,6CAA+CkC,EAAI,CAAC3E,QAAOiF,eAAc,CAAChD,QAAS,CAChH,cAAiB,UAAYC,KAF9B,WACGf,EADH,QAIWC,KAAKS,QAJhB,gBAKCpC,EAAY,OAAQ0B,EAASC,KAAKE,MAAO,UAL1C,+CAOQH,EAASC,KAAKD,UAPtB,2CAAP,wDAWF,MAAOG,GACL7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAIJ,KAGpB8D,kBAAmB,SAAClD,GAChB,IACI,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMe,IAAI,4CAA6C,CAC1EC,QAAS,CACL,cAAiB,UAAYC,KAHlC,QACGf,EADH,QAMWC,KAAKS,QAGfd,EAAS,CAAEb,KAAM,aAAcqB,QAASJ,EAASC,KAAKD,WAFtD1B,EAAY,OAAQ0B,EAASC,KAAKE,MAAO,UAP1C,2CAAP,wDAaF,MAAOA,GACL7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAIJ,KAGpB+D,kBAAmB,SAACC,GAChB,IACI,8CAAO,WAAOvE,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMe,IAAI,6CAA8CsD,GAD5E,WACGnE,EADH,QAEWC,KAAKS,QAFhB,gBAGCpC,EAAY,QAAS0B,EAASC,KAAKD,SAAU,UAH9C,+CAKQA,EAASC,KAAKmE,OALtB,2CAAP,wDASF,MAAOjE,GACL7B,EAAY,QAAQ,kDAAmD,UACvEgC,QAAQC,IAAIJ,KAGpBkE,UAAW,SAAClD,EAAMqC,GACd,IACI,8CAAO,WAAO5D,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMwB,IAAI,mDAAoDH,EAAO,CAACqC,OAD1F,cACGxD,EADH,yBAEIA,EAASC,KAAKqE,OAAOA,QAFzB,2CAAP,wDAKH,MAAMnE,GACHG,QAAQC,IAAIJ,KAGpBoE,mBAAoB,SAACpD,GACjB,IACI,8CAAO,WAAOvB,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMe,IAAI,mDAAoDM,GADlF,cACGnB,EADH,yBAEIA,EAASC,KAAKD,SAASsE,QAF3B,2CAAP,wDAKH,MAAMnE,GACHG,QAAQC,IAAIJ,KAGpBqE,SAAU,SAAChB,GACP,IACI,8CAAO,WAAO5D,EAAUC,GAAjB,eAAAnB,EAAA,sEACoBoB,IAAMe,IAAI,mDAAmD2C,GADjF,cACGxD,EADH,yBAEIA,EAASC,KAAKD,UAFlB,2CAAP,wDAKH,MAAMG,GACHG,QAAQC,IAAIJ,MClHlB2B,EAAqB,CACvB0C,SAAUd,EAAac,UAEZjH,cAAQ,KAAMuE,EAAdvE,EAtBS,SAACI,GACrB,MAAsCkF,mBAAS,IAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KACA3B,qBAAU,WACN4B,MAED,IACH,IAAMA,EAAc,uCAAG,4BAAAjG,EAAA,sEACIf,EAAM6G,SAAS7G,EAAM+D,OADzB,OACbkD,EADa,OAEnBF,EAAeE,GAFI,2CAAH,qDAIpB,OACIH,GACA,cAAC,IAAD,CAAMzG,GAAE,iBAAYL,EAAM+D,OAA1B,SACI,qBAAK9D,UAAS,sBAAiBD,EAAMkH,OAArC,SACI,+BAAOJ,EAAY5F,eCO7BiD,EAAqB,CACvBb,QAASxB,EAAYwB,SCoEnBa,GDjESvE,aATS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAOEqE,EAAzBvE,EA3BH,SAACI,GACT,OACI,qCACI,sBAAKC,UAAU,WAAf,UACA,sBAAMA,UAAU,uCAAhB,kBACA,cAAC,IAAD,CAAS2F,OAAK,EAACvF,GAAG,IAAIJ,UAAU,OAAhC,qBAECD,EAAMF,YAAc,qCACjB,cAAC,IAAD,CAASO,GAAG,UAAUJ,UAAU,OAAhC,oBACA,sBAAMA,UAAU,cAAc8E,QAAS,kBAAM/E,EAAMsD,WAAnD,0BACFtD,EAAMF,YAAc,qCAClB,cAAC,IAAD,CAASO,GAAG,QAAQJ,UAAU,OAA9B,kBACA,cAAC,IAAD,CAASI,GAAG,UAAUJ,UAAU,OAAhC,+BCgFW,CACvBqD,QAASxB,EAAYwB,QACrBM,mBAAoB9B,EAAY8B,qBAIrBhE,eAZS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAUEqE,EAAzBvE,EA3FK,SAACI,GAGjB,IAAQF,EAAgEE,EAAhEF,WAAYqH,EAAoDnH,EAApDmH,YAAavD,EAAuC5D,EAAvC4D,mBAAoBwD,EAAmBpH,EAAnBoH,eAErD,EAAsClC,oBAAS,GAA/C,mBAAOF,EAAP,KAAoBC,EAApB,KACA,EAAoDC,mBAAS,IAA7D,mBAAOb,EAAP,KAA2BD,EAA3B,KAEAgB,qBAAU,WACNC,IACA,IAAMC,EAAsBC,aAAY,WACpCF,MACD,KACH,OAAO,WAAQG,cAAcF,MAC9B,IACH,IAAI+B,EAAmBF,EAAc,kBAAoB,mBAGnD9B,EAAwB,uCAAG,4BAAAtE,EAAA,0DACzBjB,EADyB,gCAEF8D,EAAmB9D,GAFjB,QAEnBuC,EAFmB,SAIrB+B,EAAsB/B,GAJD,2CAAH,qDAS9B,OACI,sBAAKpC,UAAU,OAAf,UAEI,sBAAKA,UAAWoH,EAAhB,UACI,sBAAMpH,UAAU,gBAMhB,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,2CAA2C8E,QAAS,kBAAMqC,GAAe,IAAzF,mBAEA,sBAAKnH,UAAU,aAAf,UAEI,eAAC,IAAD,CAAS2F,OAAK,EAACvF,GAAG,IAAIJ,UAAU,kBAAhC,UACI,qBAAKA,UAAU,kBAAkBC,MAAO,CAAEC,gBAAgB,oCAC1D,sBAAMF,UAAU,6BAAhB,uBAIJ,eAAC,IAAD,CAAS2F,OAAK,EAACvF,GAAG,IAAIJ,UAAU,OAAhC,UACI,sBAAMA,UAAU,uCAAhB,kBACA,sBAAMA,UAAU,WAAhB,qBAEHD,EAAMF,YAAc,qCACjB,eAAC,IAAD,CAASO,GAAG,UAAUJ,UAAU,OAAhC,UACI,sBAAMA,UAAU,uCAAhB,uBACA,sBAAMA,UAAU,WAAhB,uBAIJ,sBAAKA,UAAU,OAAO8E,QAAS,kBAAME,GAAgBD,IAArD,UACI,sBAAM/E,UAAU,uCAAhB,2BACCoE,EAAmBoB,OAAS,GAAK,sBAAMxF,UAAU,qBAAhB,SAAsCoE,EAAmBoB,SAC3F,sBAAMxF,UAAU,WAAhB,8BAIJ,sBAAKA,UAAU,cAAc8E,QAAS,kBAAM/E,EAAMsD,WAAlD,UACI,sBAAMrD,UAAU,uCAAhB,oBACA,sBAAMA,UAAU,WAAhB,oCAKpB,cAAC,EAAD,CAAoBgF,eAAgBA,EAAgBD,YAAaA,UC7D9DsC,G,OArBC,WACZ,OACI,mCACI,sBAAKrH,UAAU,YAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,gCCsIzBkE,EAAqB,CACvB+B,SAAUH,EAAaG,SACvBI,kBAAmBP,EAAaO,kBAChCpC,kBAAmBpC,EAAYoC,mBAIpBtE,eAlBS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,WAC9ByH,OAAQ1H,EAAM2H,aAAaD,OAC3BE,iBAAkB5H,EAAME,YAAY0H,iBACpCC,iBAAkB7H,EAAME,YAAY2H,iBACpCC,gBAAiB9H,EAAME,YAAY4H,gBACnCC,QAAS/H,EAAME,YAAY6H,WAWKzD,EAAzBvE,EAnJA,SAACI,GAAW,IAAD,EAEdF,EAAeE,EAAfF,WACR,EAAoCoF,mBAAS,CAAEhE,MAAO,GAAIiF,YAAa,GAAI/C,MAAO,KAAlF,mBAAOyE,EAAP,KAAmBC,EAAnB,KACA,EAA0C5C,oBAAS,GAAnD,mBAAO6C,EAAP,KAAsBC,EAAtB,KACA,EAA8B9C,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBK,EAAhB,KACA,EAAsC/C,oBAAS,GAA/C,mBAAOiC,EAAP,KAAoBC,EAApB,KAEMc,EAAiB,SAACC,GAAO,IAAD,EACpBC,EAAQD,EAAEE,OAAOC,KACjBC,EAAQJ,EAAEE,OAAOE,MACvBT,EAAc,2BACPD,GADM,uBAERO,EAAQG,GAFA,sBAGFzI,EAAWsD,OAHT,MAOX8C,EAAQ,uCAAG,sBAAAnF,EAAA,6DACbkH,GAAW,GADE,SAEPjI,EAAMkG,SAAS2B,GAFR,OAGbG,GAAiB,GACjBC,GAAW,GAJE,2CAAH,qDAOd7C,qBAAU,WACNpF,EAAMsG,kBAAkBxG,EAAWsD,OAInC,IAAMoF,EAAoBjD,aAAY,WAC9BzF,EAAWsD,QACXpD,EAAMkE,kBAAkBpE,EAAWsD,OACnCpD,EAAMsG,kBAAkBxG,EAAWsD,UAGxC,KAEH,OAAO,WAAQoC,cAAcgD,MAG9B,IACH,IAAIC,EAAgBzI,EAAMF,WAAWuC,SAAjB,UAA+BrC,EAAMF,WAAWuC,SAASK,WAAzD,UAA0E5C,EAAW4C,WACrGgG,EAAe1I,EAAMF,WAAWuC,SAAWrC,EAAMF,WAAWuC,SAASyC,UAAY,GAAKhF,EAAWgF,UAAY,GAC7G6D,EAAU3I,EAAMF,WAAWuC,SAAWrC,EAAMF,WAAWuC,SAASuG,IAAM9I,EAAW8I,IAErF,OACI,sBAAK3I,UAAU,SAAf,UAEI,cAAC,GAAD,GAAamH,eAAgBA,EAAgBD,YAAaA,GAA1D,+BAAuFC,GAAvF,4BAAoHD,GAApH,IAEA,sBAAKlH,UAAU,kBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAMA,UAAU,iBAAiB8E,QAAS,kBAAMqC,GAAgBD,IAAhE,qBACA,wCACA,sBAAKlH,UAAU,cAAf,UACI,sBAAMA,UAAU,mBAAhB,mBAAuCwI,EAAvC,YAAwDC,KACxD,qBAAKzI,UAAU,UAAUC,MAAO,CAAEC,gBAAgB,QAAD,OAAUwI,EAAV,eAGzD,sBAAK1I,UAAU,wBAAf,UACI,qBAAKA,UAAU,YAAYC,MAAO,CAAEC,gBAAiB,4GAEpDH,EAAM4H,QACD,qBAAK3H,UAAU,oBAAf,SACE,cAAC,EAAD,MAEFD,EAAMF,YACR,qCACI,oBAAIG,UAAU,mBAAd,uBACA,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAiB8E,QAAS,kBAAMiD,GAAiB,IAAhE,UACI,sBAAM/H,UAAU,0CAAhB,gCACA,gDAGAD,EAAM0H,iBAAiBhC,KAAI,SAAA3B,GAAK,OAAI,cAAC,EAAD,CAAiBmD,MAAO,aAA0BnD,MAAOA,GAAdA,SAGvF,oBAAI9D,UAAU,mBAAd,iCACA,qBAAKA,UAAU,gBAAf,SAEQD,EAAMyH,iBAAiB/B,KAAI,SAAA3B,GAAK,OAAI,cAAC,EAAD,CAAiBmD,MAAO,aAA0BnD,MAAOA,GAAdA,QAIvF,oBAAI9D,UAAU,mBAAd,2CACA,qBAAKA,UAAU,gBAAf,SAGQD,EAAM2H,gBAAgBjC,KAAI,SAAA3B,GAAK,OAAI,cAAC,EAAD,CAAiBmD,MAAO,YAAyBnD,MAAOA,GAAdA,iBAUrG,qBAAK9D,UAAU,gBAAgBC,MAAO,CAAE2I,QAASd,EAAgB,OAAS,QAA1E,SACI,sBAAK9H,UAAU,WAAf,UACI,gCACI,qBAAK6I,IAAI,yEAAyEC,IAAI,KACtF,0CAEJ,uBAAO3H,KAAK,OAAOkH,KAAK,QAAQU,YAAY,QAAQC,SAAUf,IAC9D,0BAAUI,KAAK,cAAcU,YAAY,uBAAuBC,SAAUf,IAC1E,wBAAQnD,QAAS6C,EAAU1B,EAAW,KAAtC,gCAEA,sBAAMnB,QAAS,kBAAMiD,GAAiB,IAAQ/H,UAAU,6CAAxD,8B,iDCVdkE,EAAqB,CACvB+E,MAAOpH,EAAYe,YAGRjD,eAVS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAQEqE,EAAzBvE,EAxGA,SAACI,GACWA,EAAfF,WAAR,IACA,EAA0BoF,mBAAS,IAAnC,mBAAOgE,EAAP,KAAcC,EAAd,KACA,EAA4BjE,oBAAS,GAArC,mBAAOkE,EAAP,KAAeC,EAAf,KACMC,EAAQ,SAAAnB,GAAM,IAAD,EACXI,EAAQJ,EAAEE,OAAOE,MACjBgB,EAAOpB,EAAEE,OAAOC,KACpBa,EAAS,2BACFD,GADC,uBAEHK,EAAOhB,GAFJ,wBAGI,GAHJ,0BAIM,GAJN,MAQN3F,EAAG,uCAAG,8CAAA7B,EAAA,yDAAOoH,EAAP,+BAAW,KAAMqB,EAAjB,+BAA8B,KAAMC,EAApC,+BAAmD,KAC3DtB,GAAKA,EAAEuB,kBACH1H,EAAOmG,EAAIe,EAAQM,GAAcC,GAC3BjG,OAAUxB,EAAK2H,SAHjB,uBAIJ3I,QAAMC,gBAAgB,CAClBC,MAAO,QACPC,QAAQ,4BACRC,KAAM,SACNC,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAZzE,mBAcG,GAdH,OAgBR7B,EAAMkJ,MAAMlH,GAhBJ,2CAAH,qDAmBH4H,EAAkB,SAACvH,GACrB,MAA4BA,EAASwH,WAA7BrG,EAAR,EAAQA,MAAOsG,EAAf,EAAeA,SACflH,EAAI,KAAM,CAAEY,MAAOA,EAAOmG,SAAU,KAAOG,EAAUC,QAAQ,KAQjE,OACI,qBACA9J,UAAS,yCAEuB,IAA1BD,EAAMgK,gBAA0B,kBAA4C,IAA1BhK,EAAMgK,iBAA4B,kBAFjF,yBAGHhK,EAAMiK,WAAa,wBAA0B,yBAH1C,gCADT,SAkBI,sBAAKhK,UAAS,4BAAd,UACI,kDACA,uBAAMA,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAQA,UAAU,eAAc,uBAAOmB,KAAK,OAAOkH,KAAK,QAAQU,YAAY,QAAQC,SAAUK,EAAOY,aAAa,WACpJ,uBAAMjK,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAOA,UAAU,eAAc,uBAAOmB,KAAMgI,EAAS,WAAa,OAAQd,KAAK,WAAWU,YAAY,WAAWC,SAAUK,EAAOY,aAAa,QAC7K,qBAAKnF,QAAS,kBAAMsE,GAAWD,IAASnJ,UAAU,SAAlD,SACKmJ,EAAS,cAAC,IAAD,CAAYnJ,UAAU,kBAAqB,cAAC,IAAD,CAAOA,UAAU,uBAG9E,wBAAQ8E,QAASnC,EAAK3C,UAAU,eAAhC,oBACA,cAAC,IAAD,CAAaA,UAAU,eACnBkK,OAAQ,SAAAC,GAAW,OACf,yBAAQrF,QAASqF,EAAYrF,QAASsF,SAAUD,EAAYC,SAAUpK,UAAU,UAAhF,UAA0F,cAAC,IAAD,IAA1F,yBAEJqK,SAAS,0EACTC,UAAWX,EACXY,UAAWZ,EACXa,aAAc,+B,QCsC5BtG,EAAqB,CACvBpC,WAAYD,EAAYC,YAIbnC,cAAQ,KAAMuE,EAAdvE,EAvHA,SAACI,GACZ,MAAwBkF,mBAAS,CAAExC,UAAW,GAAIoC,SAAU,GAAItB,MAAO,GAAImG,SAAU,GAAIf,IAAK,KAA9F,mBAAO5G,EAAP,KAAa0I,EAAb,KACA,EAAgCxF,mBAAS,CAAExC,UAAW,GAAIoC,SAAU,GAAItB,MAAO,GAAImG,SAAU,GAAIf,IAAK,KAAtG,mBAAO+B,EAAP,KAAiBC,EAAjB,KACA,EAA4B1F,oBAAS,GAArC,mBAAOkE,EAAP,KAAeC,EAAf,KACMwB,EAAgB,SAAC1C,GACnBuC,EAAQ,2BACD1I,GADA,kBAEFmG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,UAG5BuC,EAAa,uCAAG,gDAAA/J,EAAA,yDAAOoH,EAAP,+BAAW,KAAMqB,EAAjB,+BAA8B,KAAMC,EAApC,+BAAmD,KACrEmB,EAAY,CAAElI,UAAW,GAAIoC,SAAU,GAAItB,MAAO,GAAImG,SAAU,GAAIf,IAAK,KACzET,GAAKA,EAAEuB,iBACHqB,EAAU5C,EAAInG,EAAOwH,GAAcC,EACvC9G,QAAQC,IAAImI,IACRC,OAAOC,OAAOF,GAASG,MAAK,SAAA3C,GAAK,MAAc,KAAVA,KALvB,iBAMdvH,QAAMC,gBAAgB,CAClBC,MAAO,QACPC,QAAQ,4BACRC,KAAM,SACNC,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAd/D,yCAiBS7B,EAAM+B,WAAWgJ,GAjB1B,QAiBR1I,EAjBQ,OAkBdM,QAAQC,IAAIP,GACRA,GACAA,EAAS8I,QAAQzF,KAAI,SAAAlD,GAAK,OAAIoI,GAAY,SAACQ,GACvC,OAAO,2BAAKA,GAAZ,kBAAwB5I,EAAM6I,QAAQC,MAAQ9I,EAAMrB,gBArB9C,4CAAH,qDA0BboK,EAAiB,SAAClJ,GACpBM,QAAQC,IAAIP,EAASwH,YACrB,MAA6DxH,EAASwH,WAA9D2B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYjI,EAA/B,EAA+BA,MAAOsG,EAAtC,EAAsCA,SAAU4B,EAAhD,EAAgDA,SAChDZ,EAAc,KAAM,CAAEpI,UAAW8I,EAAW1G,SAAU2G,EAAYjI,QAAOmG,SAAU,KAAOG,EAAUlB,IAAK8C,EAAU3B,QAAQ,KAO/H,OACI,qBAAM9J,UAAS,qCACc,IAA1BD,EAAMgK,gBAA4B,qBAA+C,IAA1BhK,EAAMgK,iBAA6B,qBAD9E,sBAEZhK,EAAMiK,WAAa,wBAAyB,yBAFhC,iBAAf,SAeI,sBAAKhK,UAAS,4BAAd,UACI,0DACA,uBAAMA,UAAU,kBAAhB,cAAmC,cAAC,IAAD,CAAQA,UAAU,eACjD,uBAAOmB,KAAK,OAAO4H,YAAY,OAC3BC,SAAU4B,EAAetC,MAAOvG,EAAKU,UAAW4F,KAAK,iBAE5DqC,EAASjI,UAAY,6BAAKiI,EAASjI,YAAkB,KACtD,uBAAMzC,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAQA,UAAU,eAChD,uBAAOmB,KAAK,OAAO4H,YAAY,YAC3BC,SAAU4B,EAAetC,MAAOvG,EAAK8C,SAAUwD,KAAK,gBAE3DqC,EAAS7F,SAAW,6BAAK6F,EAAS7F,WAAiB,KACpD,uBAAM7E,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAQA,UAAU,eAChD,uBAAOmB,KAAK,OAAO4H,YAAY,QAC3BC,SAAU4B,EAAetC,MAAOvG,EAAKwB,MAAO8E,KAAK,aAExDqC,EAASnH,MAAQ,6BAAKmH,EAASnH,QAAc,KAC9C,uBAAMvD,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAOA,UAAU,eAAe,uBAAOmB,KAAMgI,EAAS,WAAa,OAAQJ,YAAY,WAAWV,KAAK,WAAWW,SAAU4B,EAAeX,aAAa,QACtL,qBAAKnF,QAAS,kBAAMsE,GAAWD,IAASnJ,UAAU,SAAlD,SACKmJ,EAAS,cAAC,IAAD,CAAYnJ,UAAU,kBAAqB,cAAC,IAAD,CAAOA,UAAU,uBAG7E0K,EAAShB,SAAW,6BAAKgB,EAAShB,WAAiB,KACpD,uBAAM1J,UAAU,kBAAhB,UAAkC,cAAC,IAAD,CAAYA,UAAU,eACpD,uBAAOmB,KAAK,OAAOnB,UAAU,cAAc+I,YAAY,wCACnDC,SAAU4B,EAAetC,MAAOvG,EAAK4G,IAAKN,KAAK,WAEtDqC,EAAS/B,IAAM,6BAAK+B,EAAS/B,MAAY,KAC1C,wBAAQ3I,UAAU,eAAe8E,QAAS+F,EAA1C,sBACA,cAAC,IAAD,CACIR,SAAS,0EACTH,OAAQ,SAAAC,GAAW,OACf,yBAAQrF,QAASqF,EAAYrF,QAASsF,SAAUD,EAAYC,SAAUpK,UAAU,UAAhF,UAA0F,cAAC,IAAD,IAA1F,2BAEJsK,UAAWgB,EACXf,UAAWe,EACXd,aAAc,+BCjDnBkB,GA1DF,WACT,MAAoCzG,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmB2B,EAAnB,KACA,EAA8C1G,qBAA9C,mBAAO8E,EAAP,KAAwB6B,EAAxB,KAEIC,EAAgB7B,EAAa,oBAAsB,wBACnD8B,GAAqC,IAApB/B,EAA4B,8BAAmD,IAApBA,GAA4B,iCAEtGgC,EAAsB,SAACC,GACzBL,GAAe3B,GAEX4B,EADY,OAAZI,IAOR,OACI,mCAEI,sBAAKhM,UAAU,iBAAf,UACI,qBAAKA,UAAS,UAAK6L,EAAL,YAAsBC,EAAtB,MAAd,SAIQ9B,EACM,sBAAKhK,UAAW,sBAAhB,UACE,cAAC,IAAD,CAAMI,GAAG,IAAT,SAAa,sBAAMJ,UAAU,wCAAhB,oBACb,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,iBAAiBC,MAAO,CAAEC,gBAAiB,mCAG5D,sBAAKF,UAAU,gBAAf,UACI,0DACA,wBAAQA,UAAU,eAAe8E,QAAS,kBAAMiH,EAAoB,OAApE,gCAGN,sBAAK/L,UAAU,sBAAf,UACE,cAAC,IAAD,CAAMI,GAAG,IAAT,SAAa,sBAAMJ,UAAU,wCAAhB,oBACb,qBAAKA,UAAU,aAAf,SAEI,qBAAKA,UAAU,iBAAiBC,MAAO,CAAEC,gBAAiB,mCAE9D,sBAAKF,UAAU,gBAAf,UACI,4DACA,wBAAQA,UAAU,eAAe8E,QAAS,kBAAMiH,EAAoB,OAApE,oCAOpB,cAAC,EAAD,CAAQhC,gBAAiBA,EAAiBC,WAAYA,IACtD,cAACiC,EAAD,CAAOlC,gBAAiBA,EAAiBC,WAAYA,UCtD/DtJ,GAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAsGFsK,GA1FY,CAEvBC,wBAAyB,SAAC5F,GACtB,8CAAO,WAAOvE,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMe,IAAI,4DAA8DsD,GAFhG,WAEOnE,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJ0L,kBAAmB,SAACC,GAChB,8CAAO,WAAOrK,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAM8D,OAAO,mDAAqDqG,GAF1F,WAEOjK,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJ4L,gBAAiB,SAACD,EAAepL,GAE7B,OADAyB,QAAQC,IAAI0J,EAAepL,GAC3B,uCAAO,WAAOe,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMwB,IAAI,mDAAqD2I,EAAe,CAAEpL,UAFxG,WAEOmB,EAFP,QAIeC,KAAKS,QAJpB,gBAKKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UALlD,+CAOYA,EAASC,KAAKD,UAP1B,yDAUCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAXzE,0DAAP,yDAgBJ6L,mBAAoB,SAACF,EAAepL,GAEhC,OADAyB,QAAQC,IAAI0J,EAAepL,GAC3B,uCAAO,WAAOe,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMwB,IAAI,wDAA0D2I,EAAe,CAAEpL,UAF7G,WAEOmB,EAFP,QAIeC,KAAKS,QAJpB,gBAKKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UALlD,+CAOYA,EAASC,KAAKD,UAP1B,yDAUCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,6DAA2D,UAXjF,0DAAP,yDAgBJ8L,eAAgB,SAACC,EAAatJ,GAC1B,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMC,KAAK,kDAAmDsK,EAAc,CAACvJ,QAAS,CACzG,cAAiB,UAAWC,KAHjC,WAEOf,EAFP,QAKeC,KAAKS,QALpB,gBAMKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UANlD,+CAQYA,EAASC,KAAKD,UAR1B,yDAWCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAZzE,0DAAP,0DCnFFA,GAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAiGF8K,GArFK,CAChBC,qBAAsB,SAACC,GACnB,8CAAO,WAAO5K,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMe,IAAI,4CAA8C2J,GAFhF,WAEOxK,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJmM,QAAS,SAACC,EAAY3J,GAClB,8CAAO,WAAOnB,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMC,KAAK,2CAA4C2K,EAAW,CAAC5J,QAAS,CAC/F,cAAiB,UAAYC,KAHlC,WAEOf,EAFP,QAKeC,KAAKS,QALpB,gBAMKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UANlD,+CAQYA,EAASC,KAAKD,UAR1B,yDAWCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAZzE,0DAAP,yDAiBJqM,SAAU,SAACC,EAAYC,GACnB,8CAAO,WAAOjL,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMwB,IAAI,4CAA8CsJ,EAAYC,GAF5F,WAEO7K,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJwM,WAAY,SAACF,EAAYC,GACrB,8CAAO,WAAOjL,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAM8D,OAAO,4CAA8CgH,GAFnF,WAEO5K,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJyM,YAAa,SAACH,EAAYI,GAEtB,OADA1K,QAAQC,IAAIqK,EAAYI,GACxB,uCAAO,WAAOpL,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMwB,IAAI,mDAAqDsJ,EAAYI,GAFnG,WAEOhL,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,UAN1B,yDASCM,QAAQC,IAAR,MACAjC,GAAY,QAAS,6DAA2D,UAVjF,0DAAP,0DCjFFA,GAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAkFFyL,GAtEQ,CAEnBC,YAAa,SAACC,GACV,8CAAO,WAAOvL,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMe,IAAI,oDAAsDsK,GAFxF,WAEOnL,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,SAASoL,UANnC,yDASC9K,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAeJ+M,WAAY,SAACF,EAAQG,EAAYC,GAC7B,8CAAO,WAAO3L,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMC,KAAK,oDAAsDoL,EAAQG,EAAY,CACxGxK,QAAS,CAAE,cAAiB,UAAYyK,KAH7C,WAEOvL,EAFP,QAKeC,KAAKS,QALpB,gBAMKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UANlD,+CAQYA,EAASC,KAAKD,SAASoL,UARnC,yDAWC9K,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAZzE,0DAAP,yDAiBJkN,YAAa,SAACL,EAAQM,GAClB,8CAAO,WAAO7L,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAMwB,IAAI,oDAAsD6J,EAAQM,GAFhG,WAEOzL,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,SAASoL,UANnC,yDASC9K,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,yDAgBJoN,cAAe,SAACC,GACZ,8CAAO,WAAO/L,EAAUC,GAAjB,eAAAnB,EAAA,+EAEwBoB,IAAM8D,OAAO,oDAAsD+H,GAF3F,WAEO3L,EAFP,QAGeC,KAAKS,QAHpB,gBAIKpC,GAAY,QAAS0B,EAASC,KAAKD,SAAU,UAJlD,+CAMYA,EAASC,KAAKD,SAASoL,UANnC,yDASC9K,QAAQC,IAAR,MACAjC,GAAY,QAAS,kDAAmD,UAVzE,0DAAP,0DCIFwD,GAAqB,CACvB0J,YAAaP,GAAeO,YAC5BE,cAAeT,GAAeS,eAInBnO,gBAdS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,WAC9BmO,kBAAmBpO,EAAME,YAAYkO,qBAWL9J,GAAzBvE,EA1EC,SAACI,GACb,IAAQkO,EAAqFlO,EAArFkO,QAASC,EAA4EnO,EAA5EmO,OAAQC,EAAoEpO,EAApEoO,iBAAkBP,EAAkD7N,EAAlD6N,YAAaE,EAAqC/N,EAArC+N,cAAeE,EAAsBjO,EAAtBiO,kBAC/DI,EAAmCH,EAAnCG,iBAAkBlN,EAAiB+M,EAAjB/M,QAASyD,EAAQsJ,EAARtJ,IAInC,EAA4CM,oBAAS,GAArD,mBAAOoJ,EAAP,KAAuBC,EAAvB,KACA,EAAwCrJ,oBAAS,GAAjD,mBAAOsJ,EAAP,KAAqBC,EAArB,KAEA,EAA4CvJ,mBAAS,CAAEwJ,UAAW9J,EAAKzD,YAAvE,mBAAOwN,EAAP,KAAuBC,EAAvB,KAOIC,EAAwBZ,EAAkB/C,MAAM,SAAA8C,GAAS,OAAIA,IAAcpJ,KAE/EjC,QAAQC,IAAIiM,GAEZ,IAAMC,EAAe,uCAAG,4BAAA/N,EAAA,sEACG8M,EAAYM,EAAQQ,GADvB,OACdtM,EADc,OAEpB+L,EAAiB/L,GACjBkM,GAAkB,GAHE,2CAAH,qDAMfQ,EAAiB,uCAAG,4BAAAhO,EAAA,sEACCgN,EAAcnJ,GADf,OAChBvC,EADgB,OAEtB+L,EAAiB/L,GAFK,2CAAH,qDAKvB,OACI,sBAAKpC,UAAU,cAAf,UAEI,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,kBAAhB,SAAmCoO,IAGlCrO,EAAMF,WAAW0D,QAAUxD,EAAMkO,QAAQc,OAAOxL,OAC7C,sBAAKvD,UAAU,wBAAf,UACI,sBAAM8E,QAAS,kBAAMwJ,GAAmBD,IAAiBrO,UAAU,2CAAnE,kBACA,sBAAM8E,QAAS,kBAAM0J,GAAgB,IAAOxO,UAAU,2CAAtD,0BAGZ,sBAAMC,MAAO,CAAE2I,QAASyF,EAAiB,OAAS,SAAWrO,UAAU,kBAAvE,SAA0FkB,IAC1F,sBAAKlB,UAAU,iBAAf,UACI,0BAAUA,UAAU,kBAAkBmB,KAAK,OAAOmH,MAAOoG,EAAexN,QAAS8H,SAlC5E,SAAAd,GAAOyG,EAAkB,2BAAKD,GAAN,IAAsBxN,QAASgH,EAAEE,OAAOE,UAkCgCrI,MAAO,CAAE2I,QAASyF,EAAiB,QAAU,UAClJ,wBAAQrO,UAAU,qBAAqB8E,QAAS+J,EAAiB5O,MAAO,CAAE2I,QAASyF,EAAiB,QAAU,QAA9G,wBAEJ,sBAAKpO,MAAO,CAAE2I,QAAS2F,EAAe,OAAS,QAAUvO,UAAU,qBAAnE,UACI,wGACA,sBAAKA,UAAU,qBAAf,UACI,wBAAQ8E,QAASgK,EAAjB,qBACA,wBAAQhK,QAAS,kBAAM0J,GAAgB,IAAvC,gC,oBC8GdtK,GAAqB,CACvBuJ,WAAYJ,GAAeI,WAC3BH,YAAaD,GAAeC,YAC5BP,SAAUL,GAAYK,UAIXpN,gBAZS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAUEqE,GAAzBvE,EApKG,SAACI,GACf,IAUIiP,EAVJ,EAAuBjP,EAAMkP,KAArBhO,EAAR,EAAQA,MAAO0D,EAAf,EAAeA,IACP8I,EAAiE1N,EAAjE0N,WAAYyB,EAAqDnP,EAArDmP,QAASC,EAA4CpP,EAA5CoP,KAAMtP,EAAsCE,EAAtCF,WAAYkN,EAA0BhN,EAA1BgN,SAAUO,EAAgBvN,EAAhBuN,YAEzD,EAAoCrI,mBAAS,CAAE8J,OAAQ,GAAIX,iBAAkB,GAAIlN,QAAS,KAA1F,mBAAOwM,EAAP,KAAmB0B,EAAnB,KACA,EAA0CnK,mBAAS,IAAnD,mBAAOoK,EAAP,KAAsBlB,EAAtB,KACA,EAA8ClJ,oBAAS,GAAvD,mBAAOqK,EAAP,KAAwBC,EAAxB,KACA,EAA4CtK,mBAAS,CAAEiB,YAAa,KAApE,mBAAOsJ,EAAP,KAAuBC,EAAvB,KACA,EAA8BxK,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBK,EAAhB,KAEIY,EAAWuG,EAAgB,OAAT,OAElBhM,EAAQpD,EAAMF,YAAcE,EAAMF,WAAWsD,MAC7CtD,IACAmP,EAAQ,UAAMnP,EAAW4C,UAAjB,YAA8B5C,EAAWgF,UAAY,KAGjEM,qBAAU,WACFpF,EAAMkP,KAAKzB,UACXW,EAAiBpO,EAAMkP,KAAKzB,UAEhCiC,EAAkB,CAAEvJ,YAAanG,EAAMkP,KAAK/I,cAE5C,IAAMqC,EAAoBjD,aAAY,WAClCoK,MACD,KACH,OAAO,WAAQnK,cAAcgD,MAE9B,IAEH,IAAM7H,EAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAaX8N,EAAc,uCAAG,4BAAA5O,EAAA,sEACIwM,EAAY3I,GADhB,QACbvC,EADa,SAGf+L,EAAiB/L,GAHF,2CAAH,qDAeduN,EAAW,uCAAG,4BAAA7O,EAAA,yDAChBkH,GAAW,IACP+C,OAAOC,OAAO0C,GAAYzC,MAAK,SAAA2E,GAAK,MAAc,KAAVA,KAF5B,uBAIZlP,EAAY,OAAQ,+BAAgC,UAEpDsH,GAAW,GANC,mBAOL,GAPK,uBASKyF,EAAW9I,EAAK+I,EAAYvK,GATjC,QASZf,EATY,SAWZ+L,EAAiB/L,GAErBgN,EAAc,CAAEL,OAAQ,GAAIX,iBAAkB,GAAIlN,QAAS,KAC3D8G,GAAW,GAdK,4CAAH,qDAiBX6H,EAAe,uCAAG,4BAAA/O,EAAA,sEACGiM,EAAShN,EAAMkP,KAAKtK,IAAK6K,GAD5B,OACdpN,EADc,OAEpBqN,EAAkB,CAAEvJ,YAAa9D,EAAS8D,cAC1CqJ,GAAoBD,GAHA,2CAAH,qDAWjBQ,EAAiD,KAA/BN,EAAetJ,YAAqB,kCAAoCsJ,EAAetJ,YAG7G,OACI,mCACI,cAAC,KAAD,CACI6J,OAAQZ,EAERa,eAAgB,kBAAMd,GAASC,IAE/Bc,aAAa,gBACbjQ,UAAU,qBACVkQ,iBAAiB,eAPrB,SAWI,sBAAKlQ,UAAU,QAAQC,MAAO,CAAE2I,QAASA,GAAzC,UACI,sBAAK3I,MAAO,CAAE2I,QAAS,QAAvB,UACI,qBAAK5I,UAAU,kBAAf,SACI,6BAAKiB,MAGT,sBAAMjB,UAAU,yCAAyC8E,QAAS,kBAAMoK,GAAQ,IAAhF,sBAKJ,sBAAKlP,UAAU,gCAAf,UACI,6CACA,qCACKsP,GAAmB,mBAAGrP,MAAO,CAAEkQ,OAAQ,WAAarL,QAAS,WAAQyK,GAAoBD,IAAtE,SAA2FQ,GAAoC,gCACjJR,GAAmB,gCACjB,0BAAUvG,YAAY,6BAA6B5H,KAAK,OAAOmH,MAAOkH,EAAetJ,YAAa8C,SAAU,SAACd,GAAD,OAAOuH,EAAkB,CAAEvJ,YAAagC,EAAEE,OAAOE,WAC7J,sBAAKtI,UAAU,0BAAf,UACI,wBAAQ8E,QAAS+K,EAAjB,qBACA,wBAAQ/K,QAAS,kBAAMyK,GAAoBD,IAA3C,gCAOhB,0CACA,qBAAKtP,UAAU,kBAAf,SAC8B,IAAzBqP,EAAc7J,OACT,sDACA6J,EAAc5J,KAAI,SAAAwI,GAChB,OAAO,cAAC,GAAD,CAA2BA,QAASA,EAASE,iBAAkBA,EAAkBD,OAAQvJ,EAAKyL,QAASrQ,EAAMqQ,SAA/FnC,EAAQtJ,UAKzC,sBAAK3E,UAAU,oBAAf,UACI,uBAAOqQ,UAAW1I,GA1DxB,SAACO,GACG,UAAVA,EAAEoI,KACFX,KAwDgD5G,YAAY,qBAAqBV,KAAK,UAAUC,MAAOoF,EAAWxM,QAAS8H,SAzFxG,SAACd,GACxB,IAAII,EAAQJ,EAAEE,OAAOE,MACrB8G,EAAc,CACVlO,QAASoH,EACT8F,iBAAkBY,OAsFN,sBAAMlK,QAAS6C,GAAWgI,EAAa3P,UAAU,2CAAjD,+BCjDlBkE,GAAqB,CACvB6I,SAAUL,GAAYK,SACtBG,WAAYR,GAAYQ,YAGbvN,gBAXS,SAAAC,GACpB,MAAO,CACHoO,kBAAmBpO,EAAME,YAAYkO,qBASL9J,GAAzBvE,EAjGF,SAACI,GACV,IAAQkP,EAAyElP,EAAzEkP,KAAMsB,EAAmExQ,EAAnEwQ,SAAUC,EAAyDzQ,EAAzDyQ,YAAazD,EAA4ChN,EAA5CgN,SAAUG,EAAkCnN,EAAlCmN,WACvCvI,GADyE5E,EAAtBiO,kBAC5BiB,EAAvBtK,KAAK1D,EAAkBgO,EAAlBhO,MAAOwP,EAAWxB,EAAXwB,OAEpB,EAA+BxL,oBAAS,GAAxC,mBAAO0C,EAAP,KAAgB+I,EAAhB,KAEA,EAAwBzL,oBAAS,GAAjC,mBAAOkK,EAAP,KAAaD,EAAb,KAEA,EAAsCjK,mBAAS,CAAEhE,QAAOwP,WAAxD,mBAAOE,EAAP,KAAoBC,EAApB,KAEA,EAAoC3L,oBAAS,GAA7C,mBAAO4L,EAAP,KAAmBC,EAAnB,KAQA3L,qBAAU,WAAQ4L,EAAS,YAAa,CAACJ,EAAYF,SAErD,IAAMO,EAAU,uCAAG,WAAO9I,GAAP,SAAApH,EAAA,sDACf4P,GAAY,GACZE,EAAe,2BAAKD,GAAN,IAAmBF,OAAQvI,KACzCwI,GAAY,GAHG,2CAAH,sDAMVhQ,EAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAYXmP,EAAQ,uCAAG,WAAOE,GAAP,iBAAAnQ,EAAA,2DACT6P,EAAY1P,MAAMuE,OAAS,GADlB,gCAEcuH,EAASpI,EAAKgM,GAF5B,OAEHvO,EAFG,OAGH8O,EAAcX,EAAS9K,KAAI,SAAAwJ,GAC7B,OAAIA,EAAKtK,MAAQvC,EAASuC,IACf,2BAAKsK,GAAZ,kBAAmBgC,EAAgB7O,EAAS6O,KAEzChC,KAEXuB,EAAYU,GACZJ,GAAc,GAVL,2CAAH,sDAcRK,EAAc,uCAAG,8BAAArQ,EAAA,6DACnB4P,GAAY,GADO,SAEIxD,EAAWvI,GAFf,OAEbvC,EAFa,OAGfgP,EAAgBb,EAAS7L,QAAO,SAAAuK,GAAI,OAAIA,EAAKtK,KAAOvC,EAASuC,OACjEjE,EAAY,OAAQ,eAAgB,QACpC8P,EAAYY,GACZV,GAAY,GANO,2CAAH,qDASR3Q,EAAMqQ,SAAWrQ,EAAMsR,QAEnC,OACI,qBAAKrR,UAAU,eAAf,SACI,sBAAKA,UAAU,iBAAiBC,MAAO,CAAEqR,gBAAiBb,EAAS,aAAe,SAAlF,UACI,8BACI,sBAAKzQ,UAAU,WAAf,UACKiP,EAAKwB,OAAS,sBAAMtQ,MAAM,2CAA2C2E,QAAS6C,EAAU,kBAAMqJ,GAAW,IAAS,KAApG,uBAA6H,sBAAMhR,UAAU,2CAA2C8E,QAAS6C,EAAU,kBAAMqJ,GAAW,IAAQ,KAAvG,qCAC5I,sBAAMlM,QAAS,kBAAMoK,GAAQ,IAAOlP,UAAU,YAAYC,MAAO,CAAE2I,QAASiI,EAAa,OAAS,SAAlG,SAA8G5P,IAC9G,sBAAKjB,UAAU,0BAA0BC,MAAO,CAAE2I,QAASiI,EAAa,OAAS,QAAjF,UACI,uBAAO7Q,UAAU,gBAAgBmB,KAAK,OAAO6H,SAvDpD,SAAAd,GAAO0I,EAAe,2BAAKD,GAAN,IAAmB1P,MAAOiH,EAAEE,OAAOE,UAuDgBA,MAAOqI,EAAY1P,QAAe,sBAAM6D,QAAS,kBAAMiM,EAAS,UAAU9Q,MAAO,CAAE2I,QAASiI,EAAa,QAAU,QAAU1Q,MAAM,2CAAjG,qBAEvG,sBAAKH,UAAU,eAAf,UACI,sBAAM8E,QAAS,kBAAMgM,GAAeD,IAAa7Q,UAAU,2CAA3D,kBACA,sBAAM8E,QAAS6C,EAAUwJ,EAAiB,KAAMnR,UAAU,2CAA1D,4BAKZ,cAAC,GAAD,CAAWiP,KAAMA,EAAMC,QAASA,EAASC,KAAMA,EAAMiB,QAASrQ,EAAMqQ,kBCkC9ElM,GAAqB,CACvB2I,QAASH,GAAYG,QACrBF,qBAAsBD,GAAYC,qBAClCL,gBAAiBI,GAAYJ,iBAGlB3M,gBAZS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,cAUEqE,GAAzBvE,EA1HK,SAACI,GACjB,MAAgCkF,mBAAS,IAAzC,mBAAOsL,EAAP,KAAiBC,EAAjB,KACA,EAAkCvL,oBAAS,GAA3C,mBAAOsM,EAAP,KAAkBC,EAAlB,KACA,EAAwBvM,oBAAS,GAAjC,mBAAOwM,EAAP,KAAaC,EAAb,KACA,EAAgCzM,mBAAS,IAAzC,mBAAO0M,EAAP,KAAiBC,EAAjB,KACA,EAA8B3M,mBAAS,IAAvC,mBAAO4M,EAAP,KAAgBC,EAAhB,KACA,EAA8B7M,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBK,EAAhB,KACA,EAAkC/C,oBAAS,GAA3C,mBAAO8M,EAAP,KAAkBC,EAAlB,KACA,EAAgC/M,mBAAS,IAAzC,mBAAiBgN,GAAjB,WACA,EAAwChN,oBAAS,GAAjD,mBAAOsJ,EAAP,KAAqBC,EAArB,KAGArJ,qBAAU,WACN+M,IACA,IAAM3J,EAAoBjD,aAAY,WAClC4M,MACD,KACH,OAAO,WAAQ3M,cAAcgD,MAE9B,IAEH,IAAM2J,EAAa,uCAAG,8BAAApR,EAAA,sEACKf,EAAM4M,qBAAqB5M,EAAMoS,YAAYxN,KADlD,QACZvC,EADY,UAIdgQ,EAAgBhQ,EAASsC,QAAO,SAAAuK,GAAI,OAAIA,EAAKwB,UAC7CwB,EAAYG,IAEhB5B,EAAYpO,GACZoP,GAAa,GARK,2CAAH,qDAWba,EAAQ,SAACnK,EAAGoK,GACI,SAAdA,GAAkC,UAAVpK,EAAEoI,IAC1BiC,IACqB,SAAdD,GAAkC,UAAVpK,EAAEoI,MACjCvQ,EAAMyS,KAAKzS,EAAMoS,YAAYxN,IAAKgN,GAClCK,GAAcD,KAIhBQ,EAAU,uCAAG,4BAAAzR,EAAA,yDACQ,KAAnB+Q,EAAQY,OADG,wBAEXzK,GAAW,GAFA,SAGLjI,EAAM8M,QAAQ,CAAE5L,MAAO4Q,EAASa,cAAe3S,EAAMoS,YAAYxN,KAAO5E,EAAMF,WAAWsD,OAHpF,cAIXuO,GAASD,GAJE,SAKS1R,EAAM4M,qBAAqB5M,EAAMoS,YAAYxN,KALtD,OAKLgO,EALK,OAMXnC,EAAYmC,GACZb,EAAW,IACX9J,GAAW,GACX0J,GAASD,GATE,4CAAH,qDAahB,OACI,qBAAKzR,UAAU,cAAcC,MAAO,CAAE2I,QAAS7I,EAAMoS,YAAYS,SAAW,OAAS,gBAArF,SACI,sBAAK5S,UAAU,kBAAf,UACI,sBAAKC,MAAO,CAAE2I,QAAS2F,EAAe,OAAS,QAAUvO,UAAU,yBAAnE,UACI,6GACA,sBAAKA,UAAU,gCAAf,UACI,wBAAQ8E,QAAS,kBAAM/E,EAAM8S,MAAM9S,EAAMoS,YAAYxN,MAArD,qBACA,wBAAQG,QAAS,kBAAM0J,GAAgB,IAAvC,0BAGR,qBAAKxO,UAAU,4BAIf,sBAAKA,UAAU,oBAAf,UACI,sBAAM8E,QAAS,kBAAM0J,GAAgB,IAAOxO,UAAU,kEAAtD,oBACC+R,GAAa,oBAAI9R,MAAO,CAAEkQ,QAASpQ,EAAMqQ,SAAWrQ,EAAMsR,UAAY,WAAavM,QAAU/E,EAAMqQ,SAAWrQ,EAAMsR,QAAY,WAAQW,GAAcD,GAAYH,EAAY7R,EAAMoS,YAAYlR,QAAY,KAA/L,SAAsMlB,EAAMoS,YAAYlR,SACpO8Q,GACE,qCACI,sBAAK/R,UAAU,sBAAf,UACI,uBAAOqQ,UAAWsB,EAASc,OAAS,SAACvK,GAAQmK,EAAMnK,EAAG,SAAY,KAAM/G,KAAK,OAAOmH,MAAOqJ,EAAU3I,SAAU,SAACd,GAAD,OAAO0J,EAAY1J,EAAEE,OAAOE,UAC3I,sBAAMxD,QAAS6M,EAASc,OAAU,WAAQ1S,EAAMyS,KAAKzS,EAAMoS,YAAYxN,IAAKgN,GAAWK,GAAcD,IAAgB,KAAM5R,MAAM,2CAAjI,qBAEJ,sBAAM2E,QAAS,kBAAMkN,GAAcD,IAAY/R,UAAU,qCAAzD,yBAQZ,qBAAKA,UAAU,cAAf,SAEQuR,EACM,cAAC,EAAD,IACAhB,EAAS9K,KAAI,SAAAwJ,GAAI,OAAI,cAAC,GAAD,CAAMoC,QAAStR,EAAMsR,QAASjB,QAASrQ,EAAMqQ,QAAwBnB,KAAMA,EAAMsB,SAAUA,EAAUC,YAAaA,GAAvDvB,EAAKtK,UAGnG,qCACK8M,GAAQ,wBAAQzR,UAAU,gBAAgB8E,QAAS,kBAAM4M,GAASD,IAA1D,2BAEJA,GACD,sBAAKzR,UAAU,oBAAf,UACI,uBAAOA,UAAU,eAAeqQ,UAAW1I,EAAW,SAACO,GAAD,OAAOmK,EAAMnK,EAAG,SAAW,KAAM/G,KAAK,OAAO4H,YAAY,qCAAqCT,MAAOuJ,EAAS7I,SAAU,SAACd,GAAD,OAAO4J,EAAW5J,EAAEE,OAAOE,UACzM,gCACI,wBAAQtI,UAAU,gBAAgB8E,QAAS6C,EAAU4K,EAAa,KAAlE,0BACA,sBAAMzN,QAAS,kBAAM4M,GAAQ,IAAOvR,MAAM,4CAA1C,oCCrE1B+D,GAAqB,CACvByC,mBAAoBb,EAAaa,oBAEtBhH,eAAQ,KAAMuE,GAAdvE,EArCG,SAACI,GACf,MAA8BkF,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBK,EAAhB,KACA,EAA0B/C,oBAAS,GAAnC,mBAAO6N,EAAP,KAAcC,EAAd,KACQC,EAAwBjT,EAAxBiT,QAAwBjT,EAAfkT,WAGjB9N,qBAAU,YAEmC,IAD3BpF,EAAM2G,OAAOjB,KAAI,SAAAqN,GAAK,OAAIA,EAAMvP,SACpC2P,QAAQnT,EAAMgC,KAAKwB,OACzBwP,GAAS,GAETA,GAAS,KAGd,CAAChT,EAAM2G,SAEV,IAAMyM,EAAY,uCAAG,sBAAArS,EAAA,6DACjBkH,GAAW,GADM,SAEXjI,EAAM0G,UAAU1G,EAAMgC,KAAKwB,OAFhB,OAGjBwP,GAAUD,GACV9K,GAAW,GAJM,2CAAH,qDAOlB,OACI,mCACKgL,GACG,gCACI,6BAAKjT,EAAMgC,KAAKU,UAAY,KAA+B,OAAxB1C,EAAMgC,KAAK8C,SAAoB,GAAK9E,EAAMgC,KAAK8C,YAClF,wBAAQ7E,UAAU,kBAAkB8E,QAAS6C,EAAW,kBAAMwL,KAAkB,KAAhF,SAAuFL,EAAQ,QAAU,iBCiBvH5O,GAAqB,CACvBqI,mBAAoBL,GAAmBK,mBACvCH,kBAAmBF,GAAmBE,kBACtCO,qBAAsBD,GAAYC,qBAClCO,WAAYR,GAAYQ,WACxBC,YAAaT,GAAYS,aC2RvBjJ,IDvRSvE,aAdU,SAAAC,GACrB,MAAO,KAa6BsE,GAAzBvE,EAnDM,SAACI,GAEd,MAAkDkF,mBAASlF,EAAMqT,iBAAjE,mBAAOC,EAAP,KAA0BC,EAA1B,KAGAnO,qBAAU,WACNmO,EAAsBvT,EAAMqT,iBAC5BE,EAAsBvT,EAAMqT,gBAAgB1O,QAAO,SAAAyN,GAAW,OAA4B,IAAzBA,EAAYS,eAC9E,CAAC7S,EAAMqT,kBAEd,IAAMhG,EAAO,uCAAG,WAAOf,GAAP,SAAAvL,EAAA,sEACNf,EAAMwM,mBAAmBF,EAAe,CAACuG,UAAS,IAD5C,2CAAH,sDAIPC,EAAK,uCAAG,WAAOxG,GAAP,SAAAvL,EAAA,sEACJf,EAAMqM,kBAAkBC,GADpB,2CAAH,sDAKX,OAAO,mCACH,qBAAKpM,MAAO,CAAEsT,OAAQ,SAAS3K,QAAQ,OAAQ4K,cAAc,SAAUC,WAAW,YAAlF,SACAJ,EAAmB5N,KAAI,SAAA0M,GACvB,OACA,mCAAE,gCACF,6BAAKA,EAAYlR,QACjB,wBAAUhB,MAAO,CAAEsT,OAAQ,SAAUG,OAAO,OAAQC,MAAO,QAAS7O,QAAS,kBAAIsI,EAAQ+E,EAAYxN,MAArG,uBACA,wBAAU1E,MAAO,CAAEsT,OAAQ,SAAUG,OAAO,OAAQC,MAAO,QAAS7O,QAAS,kBAAI+N,EAAMV,EAAYxN,MAAnG,oCCgTmB,CACvBwB,UAAWL,EAAaK,UACxBJ,YAAaD,EAAaC,YAC1ByG,eAAgBN,GAAmBM,eACnCL,wBAAyBD,GAAmBC,wBAC5CG,gBAAiBJ,GAAmBI,gBACpCF,kBAAmBF,GAAmBE,kBACtC9I,kBAAmBzB,EAAYyB,kBAC/BsQ,eAAgB9N,EAAa8N,eAC7BC,iBAAkB/N,EAAa+N,iBAC/BvN,kBAAmBR,EAAaQ,kBAChCG,UAAWX,EAAaW,UACxBxC,kBAAmBpC,EAAYoC,kBAC/B0C,mBAAoBb,EAAaa,mBACjC4F,mBAAoBL,GAAmBK,qBAG5B5M,gBA5BS,SAAAC,GACpB,MAAO,CACHC,WAAYD,EAAME,YAAYD,WAC9ByH,OAAQ1H,EAAM2H,aAAaD,OAC3BE,iBAAkB5H,EAAME,YAAY0H,iBACpCC,iBAAkB7H,EAAME,YAAY2H,iBACpCuG,kBAAmBpO,EAAME,YAAYkO,kBACrC8F,kBAAmBlU,EAAME,YAAYgU,qBAqBL5P,GAAzBvE,EAnVD,SAACI,GACX,IAkBIyI,EACAC,EACAC,EApBIpB,EAA0CvH,EAA1CuH,OAAQhE,EAAkCvD,EAAlCuD,kBAAmBzD,EAAeE,EAAfF,WACnC,EAA8CoF,mBAAS,IAAvD,mBAAOmO,EAAP,KAAwBW,EAAxB,KACA,EAAoD9O,mBAAS,IAA7D,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAAOwM,EAAP,KAAaC,EAAb,KACA,EAA4BzM,oBAAS,GAArC,mBAAO+O,EAAP,KAAeC,EAAf,KACA,EAAgChP,mBAAS,IAAzC,mBAAO0M,EAAP,KAAiBC,EAAjB,KACA,EAAkC3M,mBAAS,IAA3C,mBAAOiP,EAAP,KAAkBC,EAAlB,KACMC,EAAWrU,EAAMsU,MAAMC,OAAO1O,GACpC,EAA0BX,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcyQ,EAAd,KACA,EAAsCtP,qBAAtC,mBAAOmB,EAAP,KAAoBoO,EAApB,KACA,EAAoCvP,oBAAS,GAA7C,mBAAOwP,EAAP,KAAmBC,EAAnB,KACA,EAAsCzP,oBAAS,GAA/C,mBACA,GADA,UACoCA,mBAAS,KAA7C,oBAAO0P,GAAP,MAAmBC,GAAnB,MACA,GAA4B3P,mBAAS,IAArC,qBAAOyB,GAAP,MAAemO,GAAf,MACA,GAA8B5P,oBAAS,GAAvC,qBAAO0C,GAAP,MAAgBK,GAAhB,MACA,GAAsC/C,oBAAS,GAA/C,qBAAOiC,GAAP,MAAoBC,GAApB,MACA,GAAkClC,oBAAS,GAA3C,qBAAO6P,GAAP,MAAkBC,GAAlB,MAKKhV,EAAMF,YAGP2I,EAAgBzI,EAAMF,WAAWuC,SAAjB,UAA+BrC,EAAMF,WAAWuC,SAASK,WAAzD,UAA0E5C,EAAW4C,WACrGgG,EAAe1I,EAAMF,WAAWuC,SAAWrC,EAAMF,WAAWuC,SAASyC,UAAY,GAAKhF,EAAWgF,UAAY,GAC7G6D,EAAU3I,EAAMF,WAAWuC,SAAWrC,EAAMF,WAAWuC,SAASuG,IAAM9I,EAAW8I,KAJjF5I,EAAMiV,QAAQC,KAAK,KAOvB9P,qBAAU,WACFpF,EAAMF,YACNE,EAAMkE,kBAAkBlE,EAAMF,WAAWsD,OAEjB,IAAxBpD,EAAMuH,OAAO9B,OACbzF,EAAMiV,QAAQC,KAAK,WAEnBV,EAASjN,EAAO4N,MAAK,SAAApR,GAAK,OAAIqR,OAAOrR,EAAMa,OAASyP,MAExDgB,KACAC,KAEA,IAAM9M,EAAoBjD,aAAY,WAC9BvF,EAAMF,WAAWsD,OACjBpD,EAAMkE,kBAAkBlE,EAAMF,WAAWsD,OAE7CkS,KACAD,OACD,KAEH,OAAO,WAAQ7P,cAAcgD,MAE9B,IAEH,IAAM6M,GAAU,uCAAG,4BAAAtU,EAAA,sEACKf,EAAMoM,wBAAwBiI,GADnC,QACTzB,EADS,SAGXoB,EAAmBpB,GAHR,2CAAH,qDAOVjS,GAAW,uCAAG,WAAOC,EAAYC,EAAcC,GAAjC,SAAAC,EAAA,sEACVC,QAAMC,gBAAgB,CACxBC,MAAON,EACPO,QAASN,EACTO,KAAMN,EACNO,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,oBACnCC,aAAc,CAAC,oBAAqB,wBACpCC,QAAS,CAAEC,SAAU,IAAMC,UAAU,EAAMC,cAAc,EAAMC,UAAU,KAT7D,2CAAH,0DAaXyQ,GAAQ,SAACnK,EAAGoK,GACA,UAAVpK,EAAEoI,KAAiC,qBAAdgC,EACrBC,KACiB,UAAVrK,EAAEoI,KAAiC,WAAdgC,EAC5BgD,KACiB,UAAVpN,EAAEoI,KAAiC,eAAdgC,GAC5BnM,MAIFoM,GAAU,uCAAG,4BAAAzR,EAAA,yDACS,KAApB6Q,EAASc,OADE,uBAEXzK,IAAW,GAFA,SAGLjI,EAAMyM,eAAe,CAAEvL,MAAO0Q,EAAUnO,QAASM,EAAMa,KAAO5E,EAAMF,WAAWsD,OAH1E,uBAISpD,EAAMoM,wBAAwBrI,EAAMa,KAJ7C,QAILgO,EAJK,UAMPoB,EAAmBpB,GACnBjB,GAASD,GACTG,EAAY,IACZ5J,IAAW,IATJ,2CAAH,qDAcVsN,GAAU,WACRpB,EAAUzB,SACVnP,EAAkB4Q,EAAWpQ,EAAMa,KACnCjE,GAAY,UAAW,gBAAiB,WACxCyT,EAAa,MAIf3B,GAAI,uCAAG,WAAOnG,EAAekJ,GAAtB,SAAAzU,EAAA,sEACHf,EAAMuM,gBAAgBD,EAAekJ,GADlC,OAETH,KAFS,2CAAH,wDAKJvC,GAAK,uCAAG,WAAOxG,GAAP,SAAAvL,EAAA,sEACJf,EAAMqM,kBAAkBC,GADpB,OAEV+I,KAFU,2CAAH,sDAcLrP,GAAW,uCAAG,sBAAAjF,EAAA,sEACVf,EAAMgG,YAAYjC,EAAMa,IAAK5E,EAAMF,WAAWsD,OADpC,OAEhBzC,GAAY,OAAQ,iBAAkB,QACtCX,EAAMiV,QAAQC,KAAK,WAHH,2CAAH,qDAMX9O,GAAS,uCAAG,4BAAArF,EAAA,6DACdkH,IAAW,GADG,SAESjI,EAAMoG,UAAUrC,EAAMa,IAAKyB,EAAarG,EAAMF,WAAWsD,OAFlE,OAERf,EAFQ,OAGdmS,EAASnS,GACT6R,GAAU,GACVjM,IAAW,GALG,2CAAH,qDAOTqN,GAAU,uCAAG,8BAAAvU,EAAA,sEACKf,EAAMuG,kBAAkB8N,GAD7B,cACT5N,EADS,gBAEMzG,EAAM4G,mBAAmByN,GAF/B,OAET1N,EAFS,OAGfkO,GAAcpO,GACdqO,GAAUnO,GAJK,2CAAH,qDAOVD,GAAS,uCAAG,WAAOlD,GAAP,eAAAzC,EAAA,sEACOf,EAAM0G,UAAUlD,EAAO6Q,GAD9B,cACR1N,EADQ,OAEdmO,GAAUnO,GAFI,kBAGPA,GAHO,2CAAH,sDAgBX2K,GAAUtR,EAAMyH,iBAAiByD,MAAK,SAAAzH,GAAO,OAAIA,IAAY2R,OAAOrR,EAAMa,QAC1EyL,GAAUrQ,EAAM0H,iBAAiBwD,MAAK,SAAAzH,GAAO,OAAIA,IAAY2R,OAAOrR,EAAMa,QAE9E,GAA8BM,oBAAS,GAAvC,qBAAO+N,GAAP,MAAgBC,GAAhB,MAKA,OACI,mCACI,sBAAKjT,UAAU,kBAAf,UACI,qBAAKK,MAAM,6BAA6BC,QAAQ,eAAhD,SACI,sBAAMC,KAAK,UAAUC,YAAY,IAAIC,EAAE,8NAE3C,cAAC,EAAD,CAAa0G,eAAgBA,GAAgBD,YAAaA,KAC1D,sBAAKlH,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAMA,UAAU,iBAAiB8E,QAAS,kBAAMqC,IAAgBD,KAAhE,qBACC8M,GAAU,oBAAIhU,UAAU,WAAWC,MAAO,CAAEkQ,OAAO,GAAD,OAAKC,GAAU,UAAY,KAAQtL,QAASsL,GAAW,WAAQ6D,GAAWD,GAASQ,EAAe,CAAEvT,MAAO6C,EAAM7C,SAAc,KAAvK,SAA8K6C,EAAM7C,SAE7L+S,GACE,sBAAKhU,UAAU,cAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,uBAAOqQ,UAAW1I,GAAW,SAACO,GAAD,OAAOmK,GAAMnK,EAAG,eAAiB,KAAM/G,KAAK,OAAOkH,KAAK,QAAQC,MAAOlC,EAAcA,EAAYnF,MAAQ,KAAM+H,SApEpJ,SAACd,GACrB,IAAMC,EAAQD,EAAEE,OAAOC,KACjBC,EAAQJ,EAAEE,OAAOE,MACvBkM,EAAe,2BACRpO,GADO,kBAET+B,EAAQG,QAgEe,sBAAMxD,QAASqB,GAAWnG,UAAU,2CAApC,qBAEJ,sBAAM8E,QAAS,kBAAMmP,GAAU,IAAOjU,UAAU,2CAAhD,sBAGR,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,mBAAhB,mBAAuCwI,EAAvC,YAAwDC,KACxD,qBAAKzI,UAAU,UAAUC,MAAO,CAAEC,gBAAgB,QAAD,OAAUwI,EAAV,eAGzD,sBAAK1I,UAAU,sBAAf,UACI,sBAAKA,UAAU,sBAAf,UAGQyU,GACA,sBAAKzU,UAAU,qBAAf,UACI,sBAAM8E,QAAS,kBAAM4P,GAAc,IAAQ1U,UAAU,uCAArD,mBAEA,kEAEA,sBAAKA,UAAU,wBAAf,UACI,uBAAOqQ,UAAW,SAACnI,GAAD,OAAOgM,EAAUzB,OAASJ,GAAMnK,EAAG,UAAY,MAAM/G,KAAK,OAAO4H,YAAY,oBAAoBT,MAAO4L,EAAWlL,SAAU,SAACd,GAAD,OAAOiM,EAAajM,EAAEE,OAAOE,QAAQ2B,aAAa,QACjM,sBAAMnF,QAASwQ,GAAStV,UAAU,2CAAlC,wBAKRoQ,IAEA,qCACI,yBAAQpQ,UAAU,qBAAqB8E,QAAS,kBAAMiQ,IAAcD,KAApE,UAAgF,sBAAM9U,UAAU,qCAAhB,oBAAhF,YAEI8U,IAEA,cAAC,KAAD,CACI/E,OAAQ+E,GAER9E,eAAgB,kBAAM+E,IAAcD,KAEpC7E,aAAa,gBACbjQ,UAAU,qBACVkQ,iBAAiB,eAPrB,SASI,sBAAKlQ,UAAU,oBAAf,UACI,sGACA,sBAAKA,UAAU,gCAAf,UACI,wBAAQ8E,QAASiB,GAAjB,qBACA,wBAAQjB,QAAS,kBAAMiQ,IAAa,IAApC,gCAWtB1D,IAAWjB,KAAY,yBAAQpQ,UAAU,qBAAqB8E,QAAS,kBAAM4P,GAAeD,IAArE,UAAkF,sBAAMzU,UAAU,qCAAhB,iBAAlF,eAW5BoQ,IAAW,qCACR,qBAAKtL,QAzFR,WACjBmO,IAAYD,KAwFoChT,UAAU,eAAtC,SACI,sBAAMA,UAAU,qCAAhB,8BAEJ,sBAAKA,UAAU,cAAcC,MAAO,CAAEuV,WAAYxC,GAAU,UAAY,UAAxE,UACI,sBAAMlO,QAAS,kBAAMmO,IAAW,IAAQjT,UAAU,uCAAlD,mBAG0B,IAAtB2U,GAAWnP,OACL,qBAAKxF,UAAU,YAAf,SACE,2DAEF2U,GAAWlP,KAAI,SAAC1D,EAAM2D,GACpB,OAAIA,EACO,cAAC,GAAD,CAAmBgB,OAAQA,GAAQ0N,SAAUA,EAAU3N,UAAWA,GAAW1E,KAAMA,EAAMiR,QAASA,GAASC,WAAYA,IAAvGvN,GAEhB,iBAQnC,sBAAK1F,UAAU,wBAAf,UACI,8BAEQoT,EAAgB3N,KAAI,SAAA0M,GAAW,OAAI,cAAC,GAAD,CAAad,QAASA,GAASjB,QAASA,GAASyC,MAAOA,GAAOL,KAAMA,GAA4BuB,mBAAoBA,EAAoB5B,YAAaA,GAAtEA,EAAYxN,WAGrIyL,IAAWiB,KACT,qCACKI,GAAQ,yBAAQzR,UAAU,oBAAoB8E,QAAS,kBAAM4M,GAASD,IAA9D,UAAqE,sBAAMzR,UAAU,uCAAhB,iBAArE,mBAEJyR,GACD,sBAAKzR,UAAU,oBAAf,UACI,uBAAOA,UAAU,eAAeqQ,UAAW1I,GAAW,SAACO,GAAD,OAAOmK,GAAMnK,EAAG,qBAAuB,KAAM/G,KAAK,OAAO4H,YAAY,qCAAqCT,MAAOqJ,EAAU3I,SAAU,SAACd,GAAD,OAAO0J,EAAY1J,EAAEE,OAAOE,UACvN,gCACI,wBAAQtI,UAAU,gBAAgB8E,QAAS6C,GAAU4K,GAAa,KAAlE,0BACA,sBAAMzN,QAAS,kBAAM4M,GAAQ,IAAO1R,UAAU,4CAA9C,kCAQ5B,qBAAKA,UAAU,WAAWC,MAAO,CAAEC,gBAAiB,gFACpD,qBAAKG,MAAM,6BAA6BC,QAAQ,eAAeN,UAAU,cAAzE,SACI,sBAAMO,KAAK,UAAUC,YAAY,IAAIC,EAAE,0pBCzQrDyD,I,OAAqB,CACzBuR,OAAQ5T,EAAYkB,qBAEPpD,gBARS,SAAAC,GACtB,MAAO,CACLC,WAAYD,EAAME,YAAYD,cAMMqE,GAAzBvE,EAtCH,SAACI,GACX,IAAQF,EAAeE,EAAfF,WACR,GAAIA,QAGC,GAAI6V,aAAaC,QAAQ,SAE5B,OADA5V,EAAM0V,OAAOC,aAAaC,QAAQ,UAC3B,KAIT,OACE,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhQ,OAAK,EAACiQ,KAAK,IAAIC,UAAWC,IAChCjW,GAAc,cAAC,IAAD,CAAO+V,KAAK,UAAUC,UAAWE,IAChD,cAAC,IAAD,CAAOH,KAAK,aAAaC,UAAWG,MAClCnW,GAAc,cAAC,IAAD,CAAO+V,KAAK,QAAQC,UAAWnK,MAC7C7L,GAAc,cAAC,IAAD,CAAO+V,KAAK,UAAUC,UAAWI,IACjD,cAAC,IAAD,CAAU7V,GAAG,iB,kBCvCjB8V,GAAe,CACjBrW,WAAY,KACZ2H,iBAAiB,GACjBC,iBAAiB,GACjBuG,kBAAkB,GAClB8F,kBAAkB,GAClBpM,gBAAgB,GAChBC,SAAS,GA+BE7H,GA5BK,WAAmC,IAAlCF,EAAiC,uDAAzBsW,GAAcC,EAAW,uCAClD,OAAQA,EAAOhV,MAEX,IAAK,WAGD,OAFAuU,aAAaU,QAAQ,aAAcC,KAAKC,UAAU,CAAE7T,UAAW0T,EAAO3T,QAAQC,UAAW8T,QAASJ,EAAO3T,QAAQmG,OACjH+M,aAAaU,QAAQ,QAASD,EAAO3T,QAAQW,OACtC,2BAAKvD,GAAZ,IAAmBC,WAAYsW,EAAO3T,UAE1C,IAAK,cAGD,OAFAkT,aAAac,QAEN,2BAAK5W,GAAZ,IAAmBC,WAAY,OAEnC,IAAK,kBACD,OAAO,2BACAD,GADP,IAEI4H,iBAAkB2O,EAAO3T,QAAQiU,gBACjChP,iBAAkB0O,EAAO3T,QAAQkU,aACjC1I,kBAAmBmI,EAAO3T,QAAQmU,UAClC7C,kBAAmBqC,EAAO3T,QAAQoU,aAClClP,gBAAiByO,EAAO3T,QAAQqU,YAChClP,SAAS,IAEjB,QACI,OAAO/H,I,SClCbsW,GAAe,CACjB5O,OAAQ,IAyBGC,GAvBM,WAAiC,IAAhC3H,EAA+B,uDAAzBsW,GAAcC,EAAW,uCACjD,OAAQA,EAAOhV,MACX,IAAK,aACD,kCACOvB,GADP,IAEI0H,OAAQ6O,EAAO3T,UAEvB,IAAK,aACD,kCACO5C,GADP,IAEI0H,OAAO,GAAD,oBAAM1H,EAAM0H,QAAZ,CAAoB6O,EAAO3T,YAGzC,IAAK,gBACD,kCACO5C,GADP,IAEI0H,OAAQ1H,EAAM0H,OAAO5C,QAAO,SAAAZ,GAAK,OAAIA,EAAMa,MAAQwR,EAAO3T,aAGlE,QACI,OAAO5C,ICjBJkX,GAFKC,aAAgB,CAAEjX,eAAayH,kBCM7CyP,GAAcC,aAAYH,GAAaI,aAAgBC,OAG7DC,IAASlN,OACP,cAAC,IAAD,CAAUnJ,MAAOiW,GAAjB,SACE,cAAC,IAAMK,WAAP,UACE,cAAC,GAAD,QAIJC,SAASC,eAAe,U","file":"static/js/main.a96648af.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { RiInstagramFill } from 'react-icons/ri'\r\nimport { IoMdMail } from 'react-icons/io'\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer>\r\n            <div className=\"contenedorFooter\">\r\n                <div className=\"logoFooter\">\r\n                    <div className=\"desklyLogo\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/desklylogo.png')\" }}></div>\r\n                    <h1>DESKLY</h1>\r\n                </div>\r\n                <div className=\"redesSociales\">\r\n                    <h2>Social Media</h2>\r\n                    <div>\r\n                        <span class=\"material-icons-outlined iconsFooter\">facebook</span>\r\n                        <RiInstagramFill className=\"iconsFooter\" />\r\n                        <IoMdMail className=\"iconsFooter\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"navigation\">\r\n                    <h2>Navigation</h2>\r\n                    <Link to=\"/\" className=\"navFooter\">Home</Link>\r\n                    {props.userLogged && <>\r\n                        <Link to=\"/myDesk\" className=\"navFooter\">My Desk</Link></>}\r\n                    {!props.userLogged &&\r\n                        <Link to=\"/sign\" className=\"navFooter\">Account</Link>}\r\n                </div>\r\n            </div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"svgFooter\">\r\n                <path fill=\"#615ee1\" fillOpacity=\"1\" d=\"M0,224L80,208C160,192,320,160,480,128C640,96,800,64,960,58.7C1120,53,1280,75,1360,85.3L1440,96L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"></path>\r\n            </svg>\r\n        </footer>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Footer)","import axios from 'axios'\r\nimport { store } from 'react-notifications-component'\r\nconst desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n    await store.addNotification({\r\n        title: alertTitle,\r\n        message: alertMessage,\r\n        type: alertType,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n        dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n    })\r\n}\r\n\r\nconst authActions = {\r\n    signUpUser: (user) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/newuser', user)\r\n                if (response.data.validationError) {\r\n                    return response.data.validationError\r\n                } else if (response.data.error){\r\n                    desklyAlert('Error', response.data.error, 'danger')\r\n                } else {\r\n                    dispatch({ type: 'LOG_USER', payload: response.data })\r\n                    desklyAlert(response.data.response.firstName,`Welcome to Deskly!`, 'success')\r\n                }\r\n            } catch (error){\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    signInUSer: (userToSignIn) => {\r\n        return async (dispatch, getState) => {\r\n            \r\n            try {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/login', userToSignIn)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Oops', response.data.error, 'danger')\r\n                } else {\r\n                    dispatch({ type: 'LOG_USER', payload: response.data.response })\r\n                    desklyAlert(response.data.response.firstName,`Welcome to Deskly!`, 'success')\r\n                }\r\n            } catch (error) {\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n\r\n    signInLocalStorage: (userLocalStorage) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/relogin', {\r\n                    headers: { 'Authorization': 'Bearer ' + userLocalStorage }\r\n                })\r\n                dispatch({ type: 'LOG_USER', payload: { ...response.data.response, token: userLocalStorage } })\r\n            } catch (error) {\r\n                if (error.response.status === 401) {\r\n                   desklyAlert('Error', 'Oops! You are not authorized to enter in this page!')\r\n                }\r\n                dispatch({ type: 'LOGOUT_USER' })\r\n            }\r\n        }\r\n    },\r\n\r\n    signOut: () => {\r\n        return (dispatch, getState) => {\r\n            desklyAlert('So long!', 'We hope to see you soon!', 'info')\r\n            dispatch({ type: 'LOGOUT_USER' })\r\n        }\r\n    },\r\n\r\n    inviteUserToBoard: (email, boardId) => {\r\n        return async (dispatch, getSate) => {\r\n            try {\r\n                await axios.put('https://desklyapp.herokuapp.com/api/inviteuser/' + email, { boardId })\r\n            } catch (error) {\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n\r\n    checkNotifications: (userLs) => {\r\n        return async (dispatch, getSate) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/checkNotifications', {\r\n                    headers: { 'Authorization': 'Bearer ' + userLs.token }\r\n                })\r\n                return response.data.response\r\n            } catch (error) {\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n\r\n    acceptJoinToBoard: (boardId, userLs) => {\r\n        \r\n        return async (dispatch, getSate) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/notification/' + boardId, {\r\n                    headers: { 'Authorization': 'Bearer ' + userLs.token }\r\n                })\r\n                dispatch({ type: 'ADD_BOARDS', payload: response.data.response.board })\r\n                return response.data.response.notification\r\n            } catch (error) {\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n\r\n    rejectJoinToBoard: (boardId, userLs) => {\r\n        return async (dispatch, getSate) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/reject/'+ boardId , {\r\n                    headers: { 'Authorization': 'Bearer ' + userLs.token }\r\n                })\r\n                return response.data.response.notification\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    },\r\n\r\n    setUserComponents: (token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/usercomponents', {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n                dispatch({ type: 'USER_COMPONENTS', payload: { ...response.data.response } })\r\n            } catch (error){\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nexport default authActions","\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/actions/authActions'\r\n\r\n\r\nconst Notification = (props) => {\r\n\r\n    const { userLogged, acceptJoinToBoard, rejectJoinToBoard, setNotificationsState, notificationsState, notif } = props\r\n\r\n\r\n    const sendAcceptNotification = async (idNotif, resp) => {\r\n        let response;\r\n        let notificationsFiltered;\r\n        if (resp) {\r\n            response = await acceptJoinToBoard(idNotif, userLogged)\r\n            notificationsFiltered = notificationsState.filter(notif => notif._id !== response)\r\n        } else {\r\n            notificationsFiltered = notificationsState.filter(notif => notif._id !== notif)\r\n            response = await rejectJoinToBoard(idNotif, userLogged)\r\n            // VER SI FUNCIONA\r\n        }\r\n        setNotificationsState(notificationsFiltered)\r\n    }\r\n    return (\r\n        <div className=\"notification\">\r\n            <span>You have an invitation to the board \"{notif.title}\" of {notif.owner.firstName + ' ' + notif.owner.lastName} </span>\r\n            <div>\r\n\r\n                <button onClick={() => sendAcceptNotification(notif._id, true)}>Accept</button>\r\n                <button onClick={() => sendAcceptNotification(notif._id, false)}>Decline</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    acceptJoinToBoard: authActions.acceptJoinToBoard,\r\n    rejectJoinToBoard: authActions.rejectJoinToBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification)\r\n\r\n","\r\nimport { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/actions/authActions'\r\nimport Notification from './Notification'\r\n\r\n\r\nconst NotificationsPanel = (props) => {\r\n\r\n    const { userLogged, checkNotifications, notifButton, setNotifButton } = props\r\n    const [notificationsState, setNotificationsState] = useState([])\r\n\r\n    let classNotificationPanel = notifButton ? 'notificationPanelOpen' : 'notificationPanelClose'\r\n\r\n    useEffect(() => {\r\n        activeCheckNotifications()\r\n        const reloadNotifications = setInterval(() => {\r\n            activeCheckNotifications()\r\n        }, 4000)\r\n        return () => { clearInterval(reloadNotifications) }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const activeCheckNotifications = async () => {\r\n        if (props.userLogged) {\r\n            const response = await checkNotifications(userLogged)\r\n            if (response) {\r\n                setNotificationsState(response)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className={classNotificationPanel}>\r\n        {/* <div className=\"notificationPanelOpen\"> */}\r\n            <div className=\"notificationsHeader\">\r\n                <span className=\"notificationsTitle\">Notifications</span>\r\n                <span className=\"material-icons-outlined closeNotifPanel\" onClick={() => setNotifButton(false)}>close</span>\r\n\r\n            </div>\r\n            {\r\n                notificationsState.length > 0\r\n                && notificationsState.map((notif, i) => {\r\n                    return <Notification key={i} notif={notif} setNotificationsState={setNotificationsState} notificationsState={notificationsState} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    checkNotifications: authActions.checkNotifications,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationsPanel)\r\n\r\n","import {NavLink, Link} from 'react-router-dom'\r\nimport NotificationsPanel from './NotificationsPanel'\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/actions/authActions'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"contenedorHeader\">\r\n            <NavLink exact to=\"/\" className=\"navegadores\">Home</NavLink>\r\n            {props.userLogged && <>\r\n                <NavLink to=\"/mydesk\" className=\"navegadores\">MyDesk</NavLink>\r\n                <Link  to=\"/\" className=\"navegadores\"><span onClick={() => props.signOut()}> Log out</span></Link></>}\r\n            {!props.userLogged && <>\r\n                <NavLink to=\"/sign\" className=\"navegadores\">Account</NavLink>\r\n                {/* <NavLink to=\"/sign\" className=\"navegadores\">Sign</NavLink> */}\r\n                {/* <NavLink to=\"/signup\" className=\"navegadores\"> Sign Up</NavLink> */}\r\n            </>}    \r\n            \r\n            <NotificationsPanel />\r\n            <div className=\"semicirculo\"></div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signOut: authActions.signOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n\r\n","import Footer from '../components/Footer'\r\nimport Header from '../components/Header'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nconst Home = (props) => {\r\n    const {userLogged} = props\r\n    return (\r\n        <div className=\"homeScroll\">\r\n            <Header />\r\n            {/* <div>\r\n                <img className=\"imgParallax1\" src=\"https://webdesing881317710.files.wordpress.com/2021/05/2cfb3ece-fe78-492e-85bd-5e35bd75c185.png\" alt=\"\" />\r\n                <img className=\"imgParallax2\" src=\"https://webdesing881317710.files.wordpress.com/2021/05/e8a83a15-29ba-4f32-8318-a0e72d7742d2.png\" alt=\"\" />\r\n                <img className=\"imgParallax3\" src=\"https://webdesing881317710.files.wordpress.com/2021/05/2cfb3ece-fe78-492e-85bd-5e35bd75c185.png\" alt=\"\" />\r\n                <img className=\"imgParallax4\" src=\"https://webdesing881317710.files.wordpress.com/2021/05/e8a83a15-29ba-4f32-8318-a0e72d7742d2.png\" alt=\"\" />\r\n            </div> */}\r\n            <div className=\"contenedorHome\">\r\n                <div className=\"contenedorHeroHome\">\r\n                    <div>\r\n                        <div className=\"desklyLogo\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/desklylogo.png')\" }}></div>\r\n                        <h1>DESKLY</h1>\r\n                    </div>\r\n                    <p>Organize and manage work efficiently. Keep track of every proyect. Make your work flow</p>\r\n                    {!userLogged && <Link to=\"/sign\"><button className=\"buttonRegister\">Join Us!</button></Link>}\r\n                </div>\r\n                <div className=\"imageHero\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/s.png')\" }}></div>\r\n            </div>\r\n            <div>\r\n                <div className=\"div2\">\r\n                    <h2>Free your mental space</h2>\r\n                    <div className=\"hands\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/6bcf4f9e-7b00-412f-b336-3b6241b86cb3.png')\" }}></div>\r\n                    <div className=\"fraseHero2\">\r\n                        <div className=\"circulo\"></div>\r\n                        <p>Regain clarity and calmness by getting all those tasks out of your head and onto your to-do list (no matter where you are or what device you use).</p>\r\n                    </div>\r\n                </div>\r\n                <svg>\r\n                    <clipPath id=\"wave\" clipPathUnits=\"objectBoundingBox\">\r\n                        <path className=\"st0\" d=\"M1,0c0,0-0.3,0.1-0.5,0.1S0.3,0,0,0.1V1h1L1,0z\" />\r\n                    </clipPath>\r\n                </svg>\r\n                <div className=\"contenedorSemiCirculo\">\r\n                    <div className=\"elipse\"><h2>DESKLY Tools</h2></div>\r\n                </div>\r\n                <div className=\"contenedorCirculosHerramientas\">\r\n                    <div className=\"desklyHerramientas1\">\r\n                        <div>\r\n                            <span className=\"material-icons-outlined\">dashboard</span>\r\n                            <h3>Boards</h3>\r\n                            <p>Helps you see the big picture</p>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"material-icons-outlined\">add</span>\r\n                            <h3>Add</h3>\r\n                            <p>Lets you capture and organize tasks in seconds</p>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"material-icons-outlined\">task_alt</span>\r\n                            <h3>Tasks</h3>\r\n                            <p>Paint a portrait of how small steps add up to big accomplishments</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"desklyHerramientas2\">\r\n                        <div>\r\n                            <span className=\"material-icons-outlined\">edit</span>\r\n                            <h3>Edit</h3>\r\n                            <p> Did you mistook? Don’t worry! You can edit all your tasks as many times you need!</p>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"material-icons-outlined\">delete</span>\r\n                            <h3>Delete</h3>\r\n                            <p>Throw away any content you don’t longer need  with just one click</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contenedorElipse2\">\r\n                    <div className=\"contenedorSemiCirculo\">\r\n                        <div className=\"fabrica\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/77cbe11a-72a2-4433-8162-8524c770d4ea.png')\" }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        userLogged: state.authReducer.userLogged\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home)","import axios from \"axios\"\r\nimport { store } from 'react-notifications-component'\r\nconst desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n    await store.addNotification({\r\n        title: alertTitle,\r\n        message: alertMessage,\r\n        type: alertType,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n        dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n    })\r\n}\r\nconst boardActions = {\r\n    deleteBoard: (id,token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.delete(\"https://desklyapp.herokuapp.com/api/board/\" + id, {headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }})\r\n                if (!response.data.success) {\r\n                    desklyAlert('Oops', response.data.error, 'danger')\r\n                } else {\r\n                    dispatch({type: 'DELETE_BOARDS', payload:response.data.response._id})\r\n                }\r\n            } catch (error){\r\n                desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    addBoard: (board) => {\r\n        const { title, description, token } = board\r\n        try {\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/board', { title, description }, {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token\r\n                    }\r\n                })\r\n                if (!response.data.success) {\r\n                    desklyAlert('Oops', response.data.error, 'danger')\r\n                } else {\r\n                    dispatch({ type: 'ADD_BOARDS', payload: response.data.response })\r\n                }\r\n            }\r\n            // eslint-disable-next-line\r\n        } catch (error) {\r\n            desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n            console.log(error)\r\n        }\r\n    },\r\n    editBoard:(id, updateInput, token) => {\r\n        const {title, description} = updateInput\r\n        try {\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.put(\"https://desklyapp.herokuapp.com/api/board/\" + id, {title, description} ,{headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }})\r\n                if (!response.data.success) {\r\n                    desklyAlert('Oops', response.data.error, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            }\r\n            // eslint-disable-next-line\r\n        } catch (error) {\r\n            desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n            console.log(error)\r\n        }\r\n    },\r\n    getBoardsFromUser: (token) => {\r\n        try {\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.get(\"https://desklyapp.herokuapp.com/api/board\", {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + token\r\n                    }\r\n                })\r\n                if (!response.data.success) {\r\n                    desklyAlert('Oops', response.data.error, 'danger')\r\n                } else {\r\n                    dispatch({ type: 'GET_BOARDS', payload: response.data.response })\r\n                }\r\n            }\r\n            // eslint-disable-next-line\r\n        } catch (error) {\r\n            desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n            console.log(error)\r\n        }\r\n    },\r\n    getUsersFromBoard: (idBoard) => {\r\n        try {\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.get(\"https://desklyapp.herokuapp.com/api/board/\" +idBoard)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.users\r\n                }\r\n            }\r\n            // eslint-disable-next-line\r\n        } catch (error) {\r\n            desklyAlert('Error','An error has occurred on the server, try later!', 'danger')\r\n            console.log(error)\r\n        }\r\n    },\r\n    userAdmin: (email,id) => {\r\n        try{\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.put(\"https://desklyapp.herokuapp.com/api/boardAdmins/\" +email, {id})\r\n                return response.data.admins.admins\r\n            }\r\n            // eslint-disable-next-line\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    },\r\n    getAdminsFromBoard: (email) => {\r\n        try{\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.get(\"https://desklyapp.herokuapp.com/api/boardAdmins/\" +email)\r\n                return response.data.response.admins\r\n            }\r\n            // eslint-disable-next-line\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    },\r\n    getBoard: (id) => {\r\n        try{\r\n            return async (dispatch, getState) => {\r\n                const response = await axios.get(\"https://desklyapp.herokuapp.com/api/boardSingle/\"+id)\r\n                return response.data.response\r\n            }\r\n            // eslint-disable-next-line\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    } \r\n}\r\n\r\nexport default boardActions","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport boardActions from '../redux/actions/boardActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BoardIndividual = (props) => {\r\n    const [boardSingle, setBoardSingle] = useState({})\r\n    useEffect(() => {\r\n        getBoardSingle()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    const getBoardSingle = async () => {\r\n        const oneBoard = await props.getBoard(props.board)\r\n        setBoardSingle(oneBoard)\r\n    }\r\n    return (\r\n        boardSingle &&\r\n        <Link to={`/board/${props.board}`}>\r\n            <div className={`boardMyDesk ${props.color}`}>\r\n                <span>{boardSingle.title}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    getBoard: boardActions.getBoard\r\n}\r\nexport default connect(null, mapDispatchToProps)(BoardIndividual)","import { NavLink } from 'react-router-dom'\r\nimport {connect} from \"react-redux\"\r\nimport authActions from '../redux/actions/authActions'\r\nconst Nav = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"homeMenu\">\r\n            <span className=\"material-icons-outlined homeIconMenu\">home</span>\r\n            <NavLink exact to=\"/\" className=\"link\">Home</NavLink>\r\n            </div>\r\n            {props.userLogged && <>\r\n                <NavLink to=\"/mydesk\" className=\"link\">MyDesk</NavLink>\r\n                <span className=\"link logOut\" onClick={() => props.signOut()}> Log out</span></>}\r\n            {!props.userLogged && <>\r\n                <NavLink to=\"/sign\" className=\"link\">Sign</NavLink>\r\n                <NavLink to=\"/signup\" className=\"link\"> Sign Up</NavLink>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signOut: authActions.signOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav)","import { NavLink } from 'react-router-dom'\r\n\r\nimport { connect } from \"react-redux\"\r\nimport Nav from \"./Nav\"\r\nimport authActions from '../redux/actions/authActions'\r\nimport NotificationsPanel from './NotificationsPanel'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst LateralMenu = (props) => {\r\n\r\n\r\n    const { userLogged, menuLateral, checkNotifications, setMenuLateral } = props\r\n\r\n    const [notifButton, setNotifButton] = useState(false)\r\n    const [notificationsState, setNotificationsState] = useState([])\r\n\r\n    useEffect(() => {\r\n        activeCheckNotifications()\r\n        const reloadNotifications = setInterval(() => {\r\n            activeCheckNotifications()\r\n        }, 4000)\r\n        return () => { clearInterval(reloadNotifications) }\r\n    }, [])\r\n    let classMenuLateral = menuLateral ? 'lateralMenuOpen' : 'lateralMenuClose'\r\n    // let classElementsMenu = menuLateral ? 'elementsMenuOpen' : 'elementsMenuClose'\r\n\r\n    const activeCheckNotifications = async () => {\r\n        if (userLogged) {\r\n            const response = await checkNotifications(userLogged)\r\n            if (response) {\r\n                setNotificationsState(response)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu\" >\r\n\r\n            <div className={classMenuLateral}>\r\n                <span className=\"fas fa-bars\"></span>\r\n\r\n                {/* <button onClick={() => setMenuLateral(!menuLateral)}>Open</button> */}\r\n\r\n                {/* <h1>{notificationsState.length}</h1> */}\r\n                {/* <div className=\"menuLateralInfo\" style={{ display: menuLateral ? 'flex' : 'none' }}> */}\r\n                <div className=\"menuLateralInfo\" >\r\n                    <span className=\"material-icons-outlined closeLateralMenu\" onClick={() => setMenuLateral(false)}>close</span>\r\n\r\n                    <div className=\"navLateral\">\r\n\r\n                        <NavLink exact to=\"/\" className=\"link linkDeskly\">\r\n                            <div className=\"logoMenuLateral\" style={{ backgroundImage: `url('/assets/DesklyLogo2.png')` }} ></div>\r\n                            <span className=\"linkMenu menuLateralDeskly\">DESKLY</span>\r\n                        </NavLink>\r\n\r\n\r\n                        <NavLink exact to=\"/\" className=\"link\">\r\n                            <span className=\"material-icons-outlined homeIconMenu\">home</span>\r\n                            <span className=\"linkMenu\">Home</span>\r\n                        </NavLink>\r\n                        {props.userLogged && <>\r\n                            <NavLink to=\"/mydesk\" className=\"link\">\r\n                                <span className=\"material-icons-outlined homeIconMenu\">dashboard</span>\r\n                                <span className=\"linkMenu\">MyDesk</span>\r\n                            </NavLink>\r\n\r\n\r\n                            <div className=\"link\" onClick={() => setNotifButton(!notifButton)}>\r\n                                <span className=\"material-icons-outlined homeIconMenu\" >notifications</span>\r\n                                {notificationsState.length > 0 && <span className=\"notificationCircle\">{notificationsState.length}</span>}\r\n                                <span className=\"linkMenu\">Notifications</span>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"link logOut\" onClick={() => props.signOut()}>\r\n                                <span className=\"material-icons-outlined homeIconMenu\">logout</span>\r\n                                <span className=\"linkMenu\">Log Out</span>\r\n                            </div></>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <NotificationsPanel setNotifButton={setNotifButton} notifButton={notifButton} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signOut: authActions.signOut,\r\n    checkNotifications: authActions.checkNotifications,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LateralMenu)","import '../../css/spin.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <>\r\n            <div className=\"sk-circle\">\r\n                <div className=\"sk-circle1 sk-child\"></div>\r\n                <div className=\"sk-circle2 sk-child\"></div>\r\n                <div className=\"sk-circle3 sk-child\"></div>\r\n                <div className=\"sk-circle4 sk-child\"></div>\r\n                <div className=\"sk-circle5 sk-child\"></div>\r\n                <div className=\"sk-circle6 sk-child\"></div>\r\n                <div className=\"sk-circle7 sk-child\"></div>\r\n                <div className=\"sk-circle8 sk-child\"></div>\r\n                <div className=\"sk-circle9 sk-child\"></div>\r\n                <div className=\"sk-circle10 sk-child\"></div>\r\n                <div className=\"sk-circle11 sk-child\"></div>\r\n                <div className=\"sk-circle12 sk-child\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport boardActions from \"../redux/actions/boardActions\"\r\nimport BoardIndividual from '../components/BoardIndividual'\r\nimport authActions from '../redux/actions/authActions'\r\nimport Nav from \"../components/Nav\"\r\nimport LateralMenu from \"../components/LateralMenu\"\r\nimport NotificationsPanel from \"../components/NotificationsPanel\"\r\nimport Spinner from \"../components/helpers/Spinner\"\r\n\r\nconst MyDesk = (props) => {\r\n\r\n    const { userLogged } = props\r\n    const [inputBoard, setInputBoard] = useState({ title: '', description: '', token: '' })\r\n    const [newBoardModal, setNewBoardModal] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const [menuLateral, setMenuLateral] = useState(false)\r\n\r\n    const readInputBoard = (e) => {\r\n        const field = e.target.name\r\n        const value = e.target.value\r\n        setInputBoard({\r\n            ...inputBoard,\r\n            [field]: value,\r\n            token: userLogged.token\r\n        })\r\n    }\r\n\r\n    const addBoard = async () => {\r\n        setLoading(false)\r\n        await props.addBoard(inputBoard)\r\n        setNewBoardModal(false)\r\n        setLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getBoardsFromUser(userLogged.token)\r\n        // if (props.boardsOwnerArray) {\r\n\r\n        // }\r\n        const reloadTaskPlanner = setInterval(() => {\r\n            if (userLogged.token) {\r\n                props.setUserComponents(userLogged.token)\r\n                props.getBoardsFromUser(userLogged.token)\r\n            }\r\n\r\n        }, 1000)\r\n\r\n        return () => { clearInterval(reloadTaskPlanner) }\r\n        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    let userFirstName = props.userLogged.response ? `${props.userLogged.response.firstName}` : `${userLogged.firstName}`\r\n    let userLastName = props.userLogged.response ? props.userLogged.response.lastName || '' : userLogged.lastName || ''\r\n    let userImg = props.userLogged.response ? props.userLogged.response.img : userLogged.img\r\n\r\n    return (\r\n        <div className=\"myDesk\">\r\n\r\n            <LateralMenu setMenuLateral={setMenuLateral} menuLateral={menuLateral} setMenuLateral={setMenuLateral} menuLateral={menuLateral} />\r\n\r\n            <div className=\"mydeskContainer\">\r\n                <div className=\"headerMyDesk\">\r\n                    <span className=\"hamburguerIcon\" onClick={() => setMenuLateral(!menuLateral)}>&#9776; </span>\r\n                    <h2>MyDesk</h2>\r\n                    <div className=\"userPicName\">\r\n                        <span className=\"userCompleteName\">{`${userFirstName} ${userLastName}`}</span>\r\n                        <div className=\"userPic\" style={{ backgroundImage: `url('${userImg}')` }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"boardsContainerMyDesk\">\r\n                    <div className=\"gifMyDesk\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/59472719-f565-4104-9c1a-9f52e846e6ca.gif')\" }}></div>\r\n\r\n                    {props.loading\r\n                        ? <div className=\"spinner-container\">\r\n                            <Spinner />\r\n                        </div>\r\n                        : props.userLogged &&\r\n                        <>\r\n                            <h2 className=\"boardsCategories\">My boards</h2>\r\n                            <div className=\"boardsSection\">\r\n                                <div className=\"newBoardButton\" onClick={() => setNewBoardModal(true)}>\r\n                                    <span className=\"material-icons-outlined nuevoTableroMas\">add_circle_outline</span>\r\n                                    <span>New board</span>\r\n                                </div>\r\n                                {\r\n                                    props.boardsOwnerArray.map(board => <BoardIndividual color={\"colorOwner\"} key={board} board={board} />)\r\n                                }\r\n                            </div>\r\n                            <h2 className=\"boardsCategories\">Boards that I admin</h2>\r\n                            <div className=\"boardsSection\">\r\n                                {\r\n                                    props.boardsAdminArray.map(board => <BoardIndividual color={\"colorAdmin\"} key={board} board={board} />)\r\n\r\n                                }\r\n                            </div>\r\n                            <h2 className=\"boardsCategories\">Boards in which I am a member</h2>\r\n                            <div className=\"boardsSection\">\r\n\r\n                                {\r\n                                    props.boardsUserArray.map(board => <BoardIndividual color={\"colorUser\"} key={board} board={board} />)\r\n\r\n                                }\r\n\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"newBoardModal\" style={{ display: newBoardModal ? 'flex' : 'none' }}>\r\n                <div className=\"newBoard\">\r\n                    <div>\r\n                        <img src=\"https://webdesing881317710.files.wordpress.com/2021/05/desklylogo2.png\" alt=\"\" />\r\n                        <p>DESKLY</p>\r\n                    </div>\r\n                    <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={readInputBoard} />\r\n                    <textarea name=\"description\" placeholder=\"Add a description...\" onChange={readInputBoard} ></textarea>\r\n                    <button onClick={loading ? addBoard : null}>Create a new board</button>\r\n                    {/* <button onClick={addBoard}>Crear nuevo tablero</button> */}\r\n                    <span onClick={() => setNewBoardModal(false)} className=\"material-icons-outlined closeNewBoardModal\">close</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* <div className=\"newBoardModal\" style={{ display: newBoardModal ? 'flex' : 'none' }}>\r\n                <div className=\"newBoard\"  >\r\n                    <input type=\"text\" name=\"title\" placeholder=\"title\" onChange={readInputBoard} />\r\n                    <input type=\"text\" name=\"description\" placeholder=\"description...\" onChange={readInputBoard} />\r\n                    <span onClick={() => setNewBoardModal(false)} className=\"closeNewBoardModal\">X</span>\r\n                </div>\r\n            </div> */}\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n        boards: state.boardReducer.boards,\r\n        boardsAdminArray: state.authReducer.boardsAdminArray,\r\n        boardsOwnerArray: state.authReducer.boardsOwnerArray,\r\n        boardsUserArray: state.authReducer.boardsUserArray,\r\n        loading: state.authReducer.loading,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addBoard: boardActions.addBoard,\r\n    getBoardsFromUser: boardActions.getBoardsFromUser,\r\n    setUserComponents: authActions.setUserComponents\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDesk)\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport GoogleLogin from 'react-google-login'\r\n// import FacebookLogin from 'react-facebook-login'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport {BsEyeSlash, BsEye} from 'react-icons/bs'\r\nimport { ImKey } from 'react-icons/im'\r\nimport { HiMail } from 'react-icons/hi'\r\nimport { store } from 'react-notifications-component'\r\nconst SignIn = (props) => {\r\n    const { userLogged } = props\r\n    const [logIn, setLogIn] = useState({})\r\n    const [oculto, setOculto] = useState(true)\r\n    const input = e => {\r\n        var value = e.target.value\r\n        var prop = e.target.name\r\n        setLogIn({\r\n            ...logIn,\r\n            [prop]: value,\r\n            google: false,\r\n            facebook: false,\r\n        })\r\n    }\r\n\r\n    const log = async (e = null, googleUser = null, userFacebook = null) => {\r\n        e && e.preventDefault()\r\n        let user = e ? logIn : googleUser || userFacebook\r\n        if (!user.email || !user.password) {\r\n            store.addNotification({\r\n                title: \"Error\",\r\n                message: `All fields are required! `,\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n                dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n            })\r\n            return false\r\n        }\r\n        props.logIn(user)\r\n    }\r\n\r\n    const respuestaGoogle = (response) => {\r\n        const { email, googleId } = response.profileObj\r\n        log(null, { email: email, password: 'Aa' + googleId, google: true })\r\n    }\r\n\r\n    // const responseFacebook = (response) => {\r\n    //     const {email, id} = response\r\n    //     log(null, {email, password: \"Aa\"+ id, facebook: true})\r\n    // }\r\n\r\n    return (\r\n        <div \r\n        className={\r\n            `contenedorLogIn \r\n            ${props.buttonanimation === true? 'loginAnimation': props.buttonanimation === false&& 'loginAnimation2'}\r\n            ${props.buttonSign ? 'responsiveAnimationIn':  'responsiveAnimationIn2'}\r\n            \r\n            `}>\r\n            {/* <div className=\"contenedorHeroLogIn\">\r\n                <div className=\"logoFooter\">\r\n                    <div className=\"desklyLogo\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/desklylogo.png')\" }}></div>\r\n                    <h1>DESKLY</h1>\r\n                </div>\r\n                <div className=\"infoRegister\">\r\n                    <h2>Create an account!</h2>\r\n                    <button className=\"buttonSignUp\">Sign Up</button>\r\n                </div>\r\n            </div> */}\r\n            {/* <div className={`contenedorFormularioLogIn ${props.buttonanimation === true && 'loginAnimation'}`}> */}\r\n            <div className={`contenedorFormularioLogIn`}>\r\n                <h2>Log in to DESKLY</h2>\r\n                <span className=\"contenedorinput\"><HiMail className=\"inputIcons\"/><input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={input} autoComplete=\"off\" /></span>\r\n                <span className=\"contenedorinput\"><ImKey className=\"inputIcons\"/><input type={oculto ? \"password\" : \"text\"} name=\"password\" placeholder=\"Password\" onChange={input} autoComplete=\"off\" />\r\n                    <div onClick={() => setOculto(!oculto)} className=\"divEye\">\r\n                        {oculto ? <BsEyeSlash className=\"inputIconsEye\" /> : <BsEye className=\"inputIconsEye\"/>}\r\n                    </div>\r\n                </span>\r\n                <button onClick={log} className=\"buttonEnviar\">Log In</button>\r\n                <GoogleLogin className=\"botonSignUp2\"\r\n                    render={renderProps => (\r\n                        <button onClick={renderProps.onClick} disabled={renderProps.disabled} className=\"bGoogle\"><FcGoogle />Log in with Google</button>\r\n                    )}\r\n                    clientId=\"81825591921-b59konhcf778namaal4as1c11cpavod7.apps.googleusercontent.com\"\r\n                    onSuccess={respuestaGoogle}\r\n                    onFailure={respuestaGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </div>\r\n            {/* <FacebookLogin\r\n                appId=\"525627921786555\"\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                callback={responseFacebook}\r\n                textButton=\"Log In with Facebook\"\r\n                icon=\"fa-facebook\"\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logIn: authActions.signInUSer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport authActions from '../redux/actions/authActions'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { NavLink } from 'react-router-dom'\r\n// import FacebookLogin from 'react-facebook-login'\r\nimport { store } from 'react-notifications-component'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { BsEyeSlash, BsEye } from 'react-icons/bs'\r\nimport { ImKey } from 'react-icons/im'\r\nimport { HiMail } from 'react-icons/hi'\r\nimport {FaUser, FaRegImage} from 'react-icons/fa'\r\n\r\nconst SignUp = (props) => {\r\n    const [user, setUser] = useState({ firstName: '', lastName: '', email: '', password: '', img: '' })\r\n    const [mistakes, setMistakes] = useState({ firstName: '', lastName: '', email: '', password: '', img: '' })\r\n    const [oculto, setOculto] = useState(true)\r\n    const readInputUser = (e) => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const sendValueUser = async (e = null, googleUser = null, userFacebook = null) => {\r\n        setMistakes({ firstName: '', lastName: '', email: '', password: '', img: '' })\r\n        e && e.preventDefault()\r\n        let userGen = e ? user : googleUser || userFacebook\r\n        console.log(userGen)\r\n        if (Object.values(userGen).some(value => value === \"\")) {\r\n            store.addNotification({\r\n                title: \"Error\",\r\n                message: `All fields are required! `,\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n                dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n            })\r\n        } else {\r\n            const response = await props.signUpUser(userGen)\r\n            console.log(response)\r\n            if (response) {\r\n                response.details.map(error => setMistakes((prevState) => {\r\n                    return { ...prevState, [error.context.label]: error.message }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n    const responseGoogle = (response) => {\r\n        console.log(response.profileObj)\r\n        const { givenName, familyName, email, googleId, imageUrl } = response.profileObj\r\n        sendValueUser(null, { firstName: givenName, lastName: familyName, email, password: \"Aa\" + googleId, img: imageUrl, google: true })\r\n    }\r\n    // const responseFacebook = (response) => {\r\n    //     const { name, email, id, picture } = response\r\n    //     sendValueUser(null, { firstName: name, lastName: null, email, password: \"Aa\" + id, img: picture.data.url, facebook: true })\r\n    // }\r\n\r\n    return (\r\n        <div  className={`contenedorLogUp\r\n         ${props.buttonanimation === false ? 'registerAnimation': props.buttonanimation === true  && 'registerAnimation2'}\r\n         ${props.buttonSign ? 'responsiveAnimationUp': 'responsiveAnimationUp2'}\r\n\r\n         `}>\r\n            {/* <div className=\"contenedorHeroLogIn\">\r\n                <div className=\"logoFooter\">\r\n                    <div className=\"desklyLogo\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/desklylogo.png')\" }}></div>\r\n                    <h1>DESKLY</h1>\r\n                </div>\r\n                <div className=\"infoRegister\">\r\n                    <h2>Log In!</h2>\r\n                    <button className=\"buttonSignUp\">Log In</button>\r\n                </div>\r\n            </div> */}\r\n            <div className={`contenedorFormularioLogUp`}>\r\n                <h2>Create account in DESKLY</h2>\r\n                <span className=\"contenedorinput\"> <FaUser className=\"inputIcons\" />\r\n                    <input type=\"text\" placeholder=\"Name\"\r\n                        onChange={readInputUser} value={user.firstName} name=\"firstName\" />\r\n                </span>\r\n                {mistakes.firstName ? <h6>{mistakes.firstName}</h6> : null}\r\n                <span className=\"contenedorinput\"><FaUser className=\"inputIcons\" />\r\n                    <input type=\"text\" placeholder=\"Last Name\"\r\n                        onChange={readInputUser} value={user.lastName} name=\"lastName\" />\r\n                </span>\r\n                {mistakes.lastName ? <h6>{mistakes.lastName}</h6> : null}\r\n                <span className=\"contenedorinput\"><HiMail className=\"inputIcons\" />\r\n                    <input type=\"text\" placeholder=\"Email\"\r\n                        onChange={readInputUser} value={user.email} name=\"email\" />\r\n                </span>\r\n                {mistakes.email ? <h6>{mistakes.email}</h6> : null}\r\n                <span className=\"contenedorinput\"><ImKey className=\"inputIcons\" /><input type={oculto ? \"password\" : \"text\"} placeholder=\"Password\" name=\"password\" onChange={readInputUser} autoComplete=\"off\" />\r\n                    <div onClick={() => setOculto(!oculto)} className=\"divEye\">\r\n                        {oculto ? <BsEyeSlash className=\"inputIconsEye\" /> : <BsEye className=\"inputIconsEye\" />}\r\n                    </div>\r\n                </span>\r\n                {mistakes.password ? <h6>{mistakes.password}</h6> : null}\r\n                <span className=\"contenedorinput\"><FaRegImage className=\"inputIcons\" />\r\n                    <input type=\"text\" className=\"input image\" placeholder=\"Please, enter the URL of your picture\"\r\n                        onChange={readInputUser} value={user.img} name=\"img\" />\r\n                </span>\r\n                {mistakes.img ? <h6>{mistakes.img}</h6> : null}\r\n                <button className=\"buttonEnviar\" onClick={sendValueUser}>Register</button>\r\n                <GoogleLogin\r\n                    clientId=\"81825591921-b59konhcf778namaal4as1c11cpavod7.apps.googleusercontent.com\"\r\n                    render={renderProps => (\r\n                        <button onClick={renderProps.onClick} disabled={renderProps.disabled} className=\"bGoogle\"><FcGoogle />Register with Google</button>\r\n                    )}\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </div>\r\n            {/* <FacebookLogin\r\n                appId=\"525627921786555\"\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                callback={responseFacebook}\r\n                textButton=\"Sign Up with Facebook\"\r\n                icon=\"fa-facebook\"\r\n            /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signUpUser: authActions.signUpUser\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import { useState } from 'react'\r\nimport LogIn from '../components/LogIn'\r\nimport SignUp from './SignUp'\r\nimport {Link} from 'react-router-dom'\r\nconst Sign = () => {\r\n    const [buttonSign, setButtonSign] = useState(true)\r\n    const [buttonanimation, setbuttonanimation] = useState()\r\n\r\n    let classFormSign = buttonSign ? 'signHeroRegistrar' : 'signHeroIniciarSesion'\r\n    let classFormSign2 = buttonanimation === false ? 'signHeroRegistrarAnimation' : buttonanimation === true && 'signHeroIniciarSesionAnimation'\r\n\r\n    const changeStatesButtons = (section) => {\r\n        setButtonSign(!buttonSign)\r\n        if (section === 'in') {\r\n            setbuttonanimation(false)\r\n        } else {\r\n            setbuttonanimation(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Header/> */}\r\n            <div className=\"contenedorSign\">\r\n                <div className={`${classFormSign} ${classFormSign2}  `}>\r\n                    {/* <button onClick={() => setButtonSign(!buttonSign)}   >Toca</button> */}\r\n\r\n                    {\r\n                        buttonSign\r\n                            ? <div className={\"contenedorHeroLogIn\"}>\r\n                                <Link to=\"/\"><span className=\"material-icons-outlined homeIconMenu2\">home</span></Link>       \r\n                                <div className=\"logoFooter\">\r\n                                  <div className=\"desklyLogoSign\" style={{ backgroundImage: \"url('/assets/register.png')\" }}></div>\r\n                                  {/* <div className=\"desklyLogoSign\" style={{ backgroundImage: \"url(https://webdesing881317710.files.wordpress.com/2021/05/register.png)\" }}></div> */}\r\n                                </div>\r\n                                <div className=\"infoRegister1\">\r\n                                    <h2>Already have an account?</h2>\r\n                                    <button className=\"buttonSignUp\" onClick={() => changeStatesButtons('in')}>Log in here!</button>\r\n                                </div>\r\n                            </div>\r\n                            : <div className=\"contenedorHeroLogIn\">\r\n                                <Link to=\"/\"><span className=\"material-icons-outlined homeIconMenu3\">home</span></Link> \r\n                                <div className=\"logoFooter\">\r\n                                    {/* <div className=\"desklyLogoSign\" style={{ backgroundImage: \"url(https://webdesing881317710.files.wordpress.com/2021/05/register.png)\" }}></div> */}\r\n                                    <div className=\"desklyLogoSign\" style={{ backgroundImage: \"url('/assets/register.png')\" }}></div>\r\n                                </div>\r\n                                <div className=\"infoRegister2\">\r\n                                    <h2> Dont have an account yet?</h2>\r\n                                    <button className=\"buttonSignUp\" onClick={() => changeStatesButtons('up')}>Register here!</button>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <SignUp buttonanimation={buttonanimation} buttonSign={buttonSign}/>\r\n                <LogIn buttonanimation={buttonanimation} buttonSign={buttonSign}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sign;","import axios from 'axios'\r\nimport { store } from 'react-notifications-component'\r\nconst desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n    await store.addNotification({\r\n        title: alertTitle,\r\n        message: alertMessage,\r\n        type: alertType,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n        dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n    })\r\n}\r\nconst taskPlannerActions = {\r\n\r\n    getTaskPlannerFromBoard: (idBoard) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/taskplannerFromBoard/' + idBoard)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    deleteTaskPlanner: (idTaskPlanner) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.delete('https://desklyapp.herokuapp.com/api/taskplanner/' + idTaskPlanner)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    editTaskPlanner: (idTaskPlanner, title) => {\r\n        console.log(idTaskPlanner, title)\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put('https://desklyapp.herokuapp.com/api/taskplanner/' + idTaskPlanner, { title })\r\n                \r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    recycleTaskPlanner: (idTaskPlanner, title) => {\r\n        console.log(idTaskPlanner, title)\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put('https://desklyapp.herokuapp.com/taskplannerFromBoard/' + idTaskPlanner, { title })\r\n                \r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'Ha ocurrido un error en el servidor, intente más tarde!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    addTaskPlanner: (taskPlanner, token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/taskplanner', taskPlanner , {headers: {\r\n                    'Authorization': 'Bearer ' +token\r\n                }})\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    }\r\n  \r\n}\r\n\r\nexport default taskPlannerActions","import axios from 'axios'\r\nimport { store } from 'react-notifications-component'\r\nconst desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n    await store.addNotification({\r\n        title: alertTitle,\r\n        message: alertMessage,\r\n        type: alertType,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n        dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n    })\r\n}\r\nconst taskActions = {\r\n    tasksFromTaskplanner: (taskPlannerId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/task/' + taskPlannerId)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response // Array de tasks segun el id del taskPlanner\r\n                }\r\n            } catch (error){\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    addTask: (taskToAdd , token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/task', taskToAdd, {headers: {\r\n                    'Authorization': 'Bearer ' + token\r\n                }})\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response // Array de tasks segun el id del taskPlanner\r\n                }            \r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    editTask: (taskEditId, taskEdit) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put('https://desklyapp.herokuapp.com/api/task/' + taskEditId, taskEdit)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response // Array de tasks segun el id del taskPlanner\r\n                }            \r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    deleteTask: (taskEditId, taskEdit) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.delete('https://desklyapp.herokuapp.com/api/task/' + taskEditId)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response // Array de tasks segun el id del taskPlanner\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    recycleTask: (taskEditId, recycle) => {\r\n        console.log(taskEditId, recycle)\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put('https://desklyapp.herokuapp.com/api/recycletask/' + taskEditId, recycle)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response // Array de tasks segun el id del taskPlanner\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'Ha ocurrido un error en el servidor, intente más tarde!', 'danger')\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nexport default taskActions","import axios from 'axios'\r\nimport { store } from 'react-notifications-component'\r\nconst desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n    await store.addNotification({\r\n        title: alertTitle,\r\n        message: alertMessage,\r\n        type: alertType,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n        dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n    })\r\n}\r\nconst commentActions = {\r\n    \r\n    getComments: (taskId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://desklyapp.herokuapp.com/api/task/comment/' + taskId)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else {\r\n                    return response.data.response.comments\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    addComment: (taskId, newComment, userToken) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://desklyapp.herokuapp.com/api/task/comment/' + taskId, newComment, {\r\n                    headers: { 'Authorization': 'Bearer ' + userToken }\r\n                })\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else{\r\n                    return response.data.response.comments\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    },\r\n\r\n    editComment: (taskId, editedComment) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put('https://desklyapp.herokuapp.com/api/task/comment/' + taskId, editedComment)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else{\r\n                    return response.data.response.comments\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n\r\n            }\r\n        }\r\n    },\r\n\r\n    deleteComment: (commentId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.delete('https://desklyapp.herokuapp.com/api/task/comment/' + commentId)\r\n                if (!response.data.success) {\r\n                    desklyAlert('Error', response.data.response, 'danger')\r\n                } else{\r\n                    return response.data.response.comments\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                desklyAlert('Error', 'An error has occurred on the server, try later!', 'danger')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default commentActions","import { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport commentActions from '../redux/actions/commentActions'\r\n\r\nconst Comment = (props) => {\r\n    const { comment, idTask, setCommentsState, editComment, deleteComment, commentsUserArray } = props\r\n    const { userCompleteName, message, _id } = comment\r\n\r\n    \r\n\r\n    const [editButtonShow, setEditButtonShow] = useState(false)\r\n    const [deleteButton, setDeleteButton] = useState(false)\r\n\r\n    const [editionComment, setEditionComment] = useState({ idComment: _id, message })\r\n\r\n    // console.log(editionComment)\r\n    const getInput = e => { setEditionComment({ ...editionComment, message: e.target.value }) }\r\n\r\n    // let imComment = props.commentsUserArray.some(commentId =>commentId === String(props.comment._id))\r\n\r\n    let checkUserOwnerComment = commentsUserArray.some( commentId => commentId === _id)\r\n\r\n    console.log(checkUserOwnerComment)\r\n\r\n    const sendEditComment = async () => {\r\n        const response = await editComment(idTask, editionComment)\r\n        setCommentsState(response)\r\n        setEditButtonShow(false)\r\n    }\r\n\r\n    const sendDeleteComment = async () => {\r\n        const response = await deleteComment(_id)\r\n        setCommentsState(response)\r\n    }\r\n\r\n    return (\r\n        <div className=\"commentTask\">\r\n\r\n            <div className=\"nameButtons\">\r\n                <span className=\"userNameComment\">{userCompleteName}</span>\r\n                {/* {props.userLogged.email === props.comment.userId.email && */}\r\n\r\n                {props.userLogged.email === props.comment.userId.email &&\r\n                    <div className=\"buttonsCommentsDelete\">\r\n                        <span onClick={() => setEditButtonShow(!editButtonShow)} className=\"material-icons-outlined iconoTaskPlanner\">edit</span>\r\n                        <span onClick={() => setDeleteButton(true)} className=\"material-icons-outlined iconoTaskPlanner\">delete</span>\r\n                    </div>}\r\n            </div>\r\n            <span style={{ display: editButtonShow ? 'none' : 'block' }} className=\"userCommentText\">{message}</span>\r\n            <div className=\"editCommentDiv\">\r\n                <textarea className=\"editAreaComment\" type=\"text\" value={editionComment.message} onChange={getInput} style={{ display: editButtonShow ? 'block' : 'none' }}></textarea>\r\n                <button className=\"confirmEditComment\" onClick={sendEditComment} style={{ display: editButtonShow ? 'block' : 'none' }}>Confirm</button>\r\n            </div>\r\n            <div style={{ display: deleteButton ? 'flex' : 'none' }} className=\"deleteCommentModal\">\r\n                <span>Are you sure you want to delete this comment? This cannot be undone.</span>\r\n                <div className=\"deleteButtonsModal\">\r\n                    <button onClick={sendDeleteComment} >Confirm</button>\r\n                    <button onClick={() => setDeleteButton(false)}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n        commentsUserArray: state.authReducer.commentsUserArray\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    editComment: commentActions.editComment,\r\n    deleteComment: commentActions.deleteComment\r\n}\r\n\r\n// export default Comment\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)\r\n","import { useState, useEffect } from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport commentActions from '../redux/actions/commentActions'\r\nimport taskActions from '../redux/actions/taskActions'\r\nimport Comment from './Comment'\r\nimport { store } from 'react-notifications-component'\r\n\r\nimport Modal from 'react-modal'\r\n\r\n\r\nconst TaskModal = (props) => {\r\n    const { title, _id } = props.task\r\n    const { addComment, setShow, show, userLogged, editTask, getComments } = props\r\n\r\n    const [newComment, setNewComment] = useState({ userId: '', userCompleteName: '', message: '' })\r\n    const [commentsState, setCommentsState] = useState([])\r\n    const [editDescription, setEditDescription] = useState(true)\r\n    const [newDescription, setNewDescription] = useState({ description: '' })\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    let display = !show ? 'none' : 'flex'\r\n    let userName;\r\n    let token = props.userLogged && props.userLogged.token\r\n    if (userLogged) {\r\n        userName = `${userLogged.firstName} ${userLogged.lastName || ''}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.task.comments) {\r\n            setCommentsState(props.task.comments)\r\n        }\r\n        setNewDescription({ description: props.task.description })\r\n\r\n        const reloadTaskPlanner = setInterval(() => {\r\n            getAllComments()\r\n        }, 2000)\r\n        return () => { clearInterval(reloadTaskPlanner) }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n        await store.addNotification({\r\n            title: alertTitle,\r\n            message: alertMessage,\r\n            type: alertType,\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n            dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n        })\r\n    }\r\n\r\n    const getAllComments = async () => {\r\n        const response = await getComments(_id)\r\n        if (response) {\r\n            setCommentsState(response)\r\n        }\r\n    }\r\n\r\n    const readDataNewComment = (e) => {\r\n        let value = e.target.value;\r\n        setNewComment({\r\n            message: value,\r\n            userCompleteName: userName //aca va el username cuando lo reciba \r\n        })\r\n    }\r\n\r\n    const sendComment = async () => {\r\n        setLoading(false)\r\n        if (Object.values(newComment).some(valor => valor === \"\")) {\r\n            // alert('comentario vacio')\r\n            desklyAlert('Oops', \"You can't send empty comment\", 'danger')\r\n\r\n            setLoading(true)\r\n            return false\r\n        }\r\n        let response = await addComment(_id, newComment, token)\r\n        if (response) {\r\n            setCommentsState(response)\r\n        }\r\n        setNewComment({ userId: '', userCompleteName: '', message: '' })\r\n        setLoading(true)\r\n    }\r\n\r\n    const sendDescription = async () => {\r\n        const response = await editTask(props.task._id, newDescription)\r\n        setNewDescription({ description: response.description })\r\n        setEditDescription(!editDescription)\r\n    }\r\n\r\n    const enter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            sendComment()\r\n        }\r\n    }\r\n    let descriptionText = newDescription.description === '' ? 'Add a more detailed description' : newDescription.description\r\n\r\n   \r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={show}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={() => setShow(!show)}\r\n                // style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n                className=\"ModalTaskComponent\"\r\n                overlayClassName=\"OverlayModal\"\r\n            >\r\n\r\n\r\n                <div className=\"modal\" style={{ display: display }}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <div className=\"taskModalHeader\">\r\n                            <h3>{title}</h3>\r\n                            {/* <p>en la lista \"nombre de la lista de tarea\"</p> */}\r\n                        </div>\r\n                        <span className=\"material-icons-outlined closeModalTask\" onClick={() => setShow(false)}>close</span>\r\n                        {/* <span onClick={() => setNewBoardModal(false)} className=\"material-icons-outlined closeNewBoardModal\">close</span> */}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"taskModalDescriptionContainer\">\r\n                        <h3>Description</h3>\r\n                        <>\r\n                            {editDescription && <p style={{ cursor: 'pointer' }} onClick={() => { setEditDescription(!editDescription) }}>{descriptionText ? descriptionText : 'Add a detailed description'}</p>}\r\n                            {!editDescription && <div>\r\n                                <textarea placeholder='Add a detailed description' type=\"text\" value={newDescription.description} onChange={(e) => setNewDescription({ description: e.target.value })} />\r\n                                <div className=\"modalDescriptionButtons\">\r\n                                    <button onClick={sendDescription} >Confirm</button>\r\n                                    <button onClick={() => setEditDescription(!editDescription)}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                        </>\r\n                    </div>\r\n\r\n                    <h3>Activity</h3>\r\n                    <div className=\"commentsSection\">\r\n                        {commentsState.length === 0\r\n                            ? <span>No comments yet...</span>\r\n                            : commentsState.map(comment => {\r\n                                return <Comment key={comment._id} comment={comment} setCommentsState={setCommentsState} idTask={_id} imOwner={props.imOwner}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"newCommentSection\">\r\n                        <input onKeyDown={loading && enter} placeholder=\"Write a comment...\" name=\"message\" value={newComment.message} onChange={readDataNewComment}></input>\r\n                        <span onClick={loading && sendComment} className=\"material-icons-outlined iconoTaskPlanner\">send</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addComment: commentActions.addComment,\r\n    getComments: commentActions.getComments,\r\n    editTask: taskActions.editTask,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskModal)","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport taskActions from '../redux/actions/taskActions'\r\nimport TaskModal from './TaskModal'\r\nimport { store } from 'react-notifications-component'\r\n\r\nimport Modal from 'react-modal';\r\n\r\n\r\nconst Task = (props) => {\r\n    const { task, allTasks, setAllTasks, editTask, deleteTask, commentsUserArray } = props\r\n    const { _id, title, verify } = task\r\n\r\n    const [loading, setLoanding] = useState(true)\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    const [editionTask, setEditionTask] = useState({ title, verify })\r\n\r\n    const [editButton, setEditButton] = useState(false)\r\n\r\n   \r\n\r\n    // const [loading, setLoading] = useState(true)\r\n\r\n    const getInput = e => { setEditionTask({ ...editionTask, title: e.target.value }) }\r\n\r\n    useEffect(() => { sendEdit(\"verify\") }, [editionTask.verify])\r\n\r\n    const verifyTask = async (e) => {\r\n        setLoanding(false)\r\n        setEditionTask({ ...editionTask, verify: e })\r\n        setLoanding(true)\r\n    }\r\n\r\n    const desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n        await store.addNotification({\r\n            title: alertTitle,\r\n            message: alertMessage,\r\n            type: alertType,\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n            dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n        })\r\n    }\r\n    const sendEdit = async (elementToEdit) => {\r\n        if (editionTask.title.length > 0) {\r\n            const response = await editTask(_id, editionTask)\r\n            const editedTasks = allTasks.map(task => {\r\n                if (task._id === response._id) {\r\n                    return { ...task, [elementToEdit]: response[elementToEdit] }\r\n                }\r\n                return task\r\n            })\r\n            setAllTasks(editedTasks)\r\n            setEditButton(false)\r\n        }\r\n    }\r\n\r\n    const sendDeleteTask = async () => {\r\n        setLoanding(false)\r\n        const response = await deleteTask(_id)\r\n        let arrayFiltered = allTasks.filter(task => task._id != response._id)\r\n        desklyAlert('Info', 'Task deleted', 'info')\r\n        setAllTasks(arrayFiltered)\r\n        setLoanding(true)\r\n    }\r\n\r\n    let style = props.imOwner || props.imAdmin ? 'block' : 'none'\r\n\r\n    return (\r\n        <div className=\"overflowTask\">\r\n            <div className=\"contenedorTask\" style={{ backgroundColor: verify ? 'lightgreen' : 'white' }}>\r\n                <div>\r\n                    <div className=\"taskInfo\">\r\n                        {task.verify ? <span class=\"material-icons-outlined iconoTaskPlanner\" onClick={loading ? () => verifyTask(false) : null}>check_box</span> : <span className=\"material-icons-outlined iconoTaskPlanner\" onClick={loading ? () => verifyTask(true) : null}>check_box_outline_blank</span>}\r\n                        <span onClick={() => setShow(true)} className=\"taskTitle\" style={{ display: editButton ? 'none' : 'block' }}>{title}</span>\r\n                        <div className=\"contenedorInputEditTask\" style={{ display: editButton ? 'flex' : 'none' }}>\r\n                            <input className=\"inputEditTask\" type=\"text\" onChange={getInput} value={editionTask.title}></input><span onClick={() => sendEdit(\"title\")} style={{ display: editButton ? 'block' : 'none' }} class=\"material-icons-outlined iconoTaskPlanner\">send</span>\r\n                        </div>\r\n                        <div className=\"inputActions\">\r\n                            <span onClick={() => setEditButton(!editButton)} className=\"material-icons-outlined iconoTaskPlanner\">edit</span>\r\n                            <span onClick={loading ? sendDeleteTask : null} className=\"material-icons-outlined iconoTaskPlanner\">delete</span>\r\n                            {/* <input className=\"inputVerify\" type=\"checkbox\" onChange={verifyTask} checked={editionTask.verify}></input> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TaskModal task={task} setShow={setShow} show={show} imOwner={props.imOwner} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        commentsUserArray: state.authReducer.commentsUserArray,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    editTask: taskActions.editTask,\r\n    deleteTask: taskActions.deleteTask,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)\r\n","import { useEffect, useState } from 'react'\r\nimport taskActions from \"../redux/actions/taskActions\"\r\nimport { connect } from \"react-redux\"\r\nimport Task from \"./Task\"\r\nimport { IoSend } from 'react-icons/io5'\r\nimport Spinner from './helpers/Spinner'\r\n\r\nconst TaskPlanner = (props) => {\r\n    const [allTasks, setAllTasks] = useState([])\r\n    const [preloader, setPreloader] = useState(true)\r\n    const [open, setOpen] = useState(true)\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newTask, setNewTask] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [editTitle, setEditTitle] = useState(true)\r\n    const [progress, setProgress] = useState([])\r\n    const [deleteButton, setDeleteButton] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchAllTasks()\r\n        const reloadTaskPlanner = setInterval(() => {\r\n            fetchAllTasks()\r\n        }, 2000)\r\n        return () => { clearInterval(reloadTaskPlanner) }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const fetchAllTasks = async () => {\r\n        const response = await props.tasksFromTaskplanner(props.taskplanner._id)\r\n        var tasksProgress;\r\n        if(response){\r\n            tasksProgress = response.filter(task => task.verify)\r\n            setProgress(tasksProgress)\r\n        }\r\n        setAllTasks(response)\r\n        setPreloader(false)\r\n    }\r\n\r\n    const enter = (e, condition) => {\r\n        if (condition === 'task' && e.key === 'Enter') {\r\n            sendValues()\r\n        } else if (condition === 'edit' && e.key === 'Enter') {\r\n            props.edit(props.taskplanner._id, newTitle)\r\n            setEditTitle(!editTitle)\r\n        }\r\n    }\r\n\r\n    const sendValues = async () => {\r\n        if (newTask.trim() !== \"\") {\r\n            setLoading(false)\r\n            await props.addTask({ title: newTask, taskplannerId: props.taskplanner._id }, props.userLogged.token)\r\n            setOpen(!open)\r\n            const tasks = await props.tasksFromTaskplanner(props.taskplanner._id)\r\n            setAllTasks(tasks)\r\n            setNewTask('')\r\n            setLoading(true)\r\n            setOpen(!open)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"taskPlanner\" style={{ display: props.taskplanner.archived ? \"none\" : \"inline-block\" }}>\r\n            <div className=\"taskPlannerList\">\r\n                <div style={{ display: deleteButton ? 'flex' : 'none' }} className=\"deleteTaskPlannerModal\">\r\n                    <span>Are you sure you want to delete this task planner? This cannot be undone.</span>\r\n                    <div className=\"deleteButtonsModalTaskPlanner\">\r\n                        <button onClick={() => props.erase(props.taskplanner._id)}>Confirm</button>\r\n                        <button onClick={() => setDeleteButton(false)}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contenedorOptionsHeader\">\r\n                    {/* <progress className=\"progress-done\" value={progress.length} max={allTasks.length}></progress> */}\r\n                </div>\r\n\r\n                <div className=\"headerTaskPlanner\">\r\n                    <span onClick={() => setDeleteButton(true)} className=\"material-icons-outlined iconoTaskPlanner iconoTaskPlannerDelete\" >delete</span>\r\n                    {editTitle && <h3 style={{ cursor: (props.imOwner || props.imAdmin) && 'pointer' }} onClick={(props.imOwner || props.imAdmin) ? (() => { setEditTitle(!editTitle); setNewTitle(props.taskplanner.title) }) : null}>{props.taskplanner.title}</h3>}\r\n                    {!editTitle &&\r\n                        <>\r\n                            <div className=\"contenedorEditTitle\">\r\n                                <input onKeyDown={newTitle.trim() ? (e) => { enter(e, 'edit') } : null} type=\"text\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                <span onClick={newTitle.trim() ? (() => { props.edit(props.taskplanner._id, newTitle); setEditTitle(!editTitle) }) : null} class=\"material-icons-outlined iconoTaskPlanner\">send</span>\r\n                            </div>\r\n                            <span onClick={() => setEditTitle(!editTitle)} className=\"material-icons-outlined iconoClose\">close</span>\r\n                        </>\r\n                    }\r\n                    {/* <div style={{ display: props.imOwner || props.imAdmin ? 'block' : 'none' }}>\r\n                        <button  onClick={() =>props.archive(props.taskplanner._id)}>archived</button>\r\n\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"tasksScroll\">\r\n                    {\r\n                        preloader\r\n                            ? <Spinner />\r\n                            : allTasks.map(task => <Task imAdmin={props.imAdmin} imOwner={props.imOwner} key={task._id} task={task} allTasks={allTasks} setAllTasks={setAllTasks} />)\r\n                    }\r\n                </div>\r\n                <>\r\n                    {open && <button className=\"buttonAddTask\" onClick={() => setOpen(!open)}>Add new task</button>}\r\n                    {\r\n                        !open &&\r\n                        <div className=\"contenedorAddList\">\r\n                            <input className=\"inputAddTask\" onKeyDown={loading ? ((e) => enter(e, 'task')) : null} type=\"text\" placeholder=\"Introduce a title for the new task\" value={newTask} onChange={(e) => setNewTask(e.target.value)} />\r\n                            <div>\r\n                                <button className=\"buttonAddList\" onClick={loading ? sendValues : null}>Add new task</button>\r\n                                <span onClick={() => setOpen(true)} class=\"material-icons-outlined iconoAddListClose\">close</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addTask: taskActions.addTask,\r\n    tasksFromTaskplanner: taskActions.tasksFromTaskplanner,\r\n    editTaskPlanner: taskActions.editTaskPlanner\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPlanner)\r\n","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport boardActions from '../redux/actions/boardActions'\r\n\r\nconst UserAdmin = (props) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [admin, setAdmin] = useState(false)\r\n    const { visible, setVisible } = props\r\n\r\n\r\n    useEffect(() => {\r\n        const array = props.admins.map(admin => admin.email)\r\n        if (array.indexOf(props.user.email) !== -1) {\r\n            setAdmin(false)\r\n        } else {\r\n            setAdmin(true)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.admins])\r\n\r\n    const confirmAdmin = async () => {\r\n        setLoading(false)\r\n        await props.userAdmin(props.user.email)\r\n        setAdmin(!admin)\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {visible &&\r\n                <div>\r\n                    <h3>{props.user.firstName + ' ' + (props.user.lastName === null ? '' : props.user.lastName)}</h3>\r\n                    <button className=\"buttonUserAdmin\" onClick={loading ? (() => confirmAdmin()) : null}>{admin ? 'ADMIN' : 'USER'}</button>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nconst mapDispatchToProps = {\r\n    getAdminsFromBoard: boardActions.getAdminsFromBoard\r\n}\r\nexport default connect(null, mapDispatchToProps)(UserAdmin)","import { connect } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport taskPlannerActions from '../redux/actions/taskPlannerActions'\r\nimport taskActions from \"../redux/actions/taskActions\"\r\n\r\n\r\n\r\n    const Archive  = (props) => {\r\n\r\n        const [filterTaskplanners,setFilterTaskplanners] =useState(props.allTasksPlanner)\r\n\r\n\r\n        useEffect(() => {\r\n            setFilterTaskplanners(props.allTasksPlanner)\r\n            setFilterTaskplanners(props.allTasksPlanner.filter(taskplanner =>taskplanner.archived === true))\r\n        }, [props.allTasksPlanner])\r\n\r\n    const recycle = async (idTaskPlanner) => {\r\n        await props.recycleTaskPlanner(idTaskPlanner, {archived:false})\r\n    }\r\n\r\n    const erase = async (idTaskPlanner) => {\r\n        await props.deleteTaskPlanner(idTaskPlanner)\r\n    }\r\n\r\n\r\n    return(<>   \r\n        <div style={{ margin: '2.5rem',display:\"flex\", flexDirection:\"column\", alignItems:\"flex-end\" }}>{\r\n        filterTaskplanners.map(taskplanner =>{\r\n        return (\r\n        <><div>\r\n        <h1>{taskplanner.title}</h1> \r\n        <button   style={{ margin: '0.5rem', height:\"2rem\", width: \"5rem\"}} onClick={()=>recycle(taskplanner._id)}> devolver</button>\r\n        <button   style={{ margin: '0.5rem', height:\"2rem\", width: \"5rem\"}} onClick={()=>erase(taskplanner._id)}> borrar</button>\r\n        </div>\r\n        </>)} )\r\n         }\r\n       </div>    \r\n    </>\r\n    )\r\n } \r\n\r\n\r\n \r\n const mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    recycleTaskPlanner: taskPlannerActions.recycleTaskPlanner,\r\n    deleteTaskPlanner: taskPlannerActions.deleteTaskPlanner,\r\n    tasksFromTaskplanner: taskActions.tasksFromTaskplanner,\r\n    deleteTask: taskActions.deleteTask,\r\n    recycleTask: taskActions.recycleTask,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Archive)\r\n\r\n\r\n\r\n","import { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport boardActions from '../redux/actions/boardActions'\r\nimport authActions from '../redux/actions/authActions'\r\nimport taskPlannerActions from '../redux/actions/taskPlannerActions'\r\nimport taskActions from \"../redux/actions/taskActions\"\r\nimport TaskPlanner from './Taskplanner'\r\nimport UserAdmin from './UserAdmin'\r\nimport { Link } from 'react-router-dom'\r\nimport LateralMenu from './LateralMenu'\r\nimport { store } from 'react-notifications-component'\r\nimport Archive from \"./Archive\"\r\n\r\nimport Modal from 'react-modal'\r\n\r\nconst Board = (props) => {\r\n    const { boards, inviteUserToBoard, userLogged } = props\r\n    const [allTasksPlanner, setAllTasksPlanner] = useState([])\r\n    const [filterTaskplanners, setFilterTaskplanners] = useState([])\r\n    const [open, setOpen] = useState(true)\r\n    const [update, setUpdate] = useState(true)\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newInvite, setNewInvite] = useState('')\r\n    const idParams = props.match.params.id\r\n    const [board, setBoard] = useState({})\r\n    const [updateInput, setUpdateInput] = useState()\r\n    const [openInvite, setOpenInvite] = useState(false)\r\n    const [openArchive, setOpenArchive] = useState(false)\r\n    const [boardUsers, setBoardUsers] = useState([])\r\n    const [admins, setAdmins] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [menuLateral, setMenuLateral] = useState(false)\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    let userFirstName;\r\n    let userLastName;\r\n    let userImg;\r\n    if (!props.userLogged) {\r\n        props.history.push('/')\r\n    } else {\r\n        userFirstName = props.userLogged.response ? `${props.userLogged.response.firstName}` : `${userLogged.firstName}`\r\n        userLastName = props.userLogged.response ? props.userLogged.response.lastName || '' : userLogged.lastName || ''\r\n        userImg = props.userLogged.response ? props.userLogged.response.img : userLogged.img\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.userLogged) {\r\n            props.setUserComponents(props.userLogged.token)\r\n        }\r\n        if (props.boards.length === 0) {\r\n            props.history.push('/myDesk')\r\n        } else {\r\n            setBoard(boards.find(board => String(board._id) === idParams))\r\n        }\r\n        tasksFetch()\r\n        usersFetch()\r\n\r\n        const reloadTaskPlanner = setInterval(() => {\r\n            if (props.userLogged.token) {\r\n                props.setUserComponents(props.userLogged.token)\r\n            }\r\n            usersFetch()\r\n            tasksFetch()\r\n        }, 5000)\r\n\r\n        return () => { clearInterval(reloadTaskPlanner) }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const tasksFetch = async () => {\r\n        const tasks = await props.getTaskPlannerFromBoard(idParams)\r\n        if (tasks) {\r\n            setAllTasksPlanner(tasks)\r\n        }\r\n\r\n    }\r\n    const desklyAlert = async (alertTitle, alertMessage, alertType) => {\r\n        await store.addNotification({\r\n            title: alertTitle,\r\n            message: alertMessage,\r\n            type: alertType,\r\n            insert: \"top\",\r\n            container: \"top-right\",\r\n            animationIn: [\"animate__animated\", \"animate__flipInX\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOutDown\"],\r\n            dismiss: { duration: 3000, onScreen: true, pauseOnHover: true, showIcon: true }\r\n        })\r\n    }\r\n\r\n    const enter = (e, condition) => {\r\n        if (e.key === 'Enter' && condition === 'titleTaskPlanner') {\r\n            sendValues()\r\n        } else if (e.key === 'Enter' && condition === 'invite') {\r\n            addUser()\r\n        } else if (e.key === 'Enter' && condition === 'titleBoard') {\r\n            editBoard()\r\n        }\r\n    }\r\n\r\n    const sendValues = async () => {\r\n        if (newTitle.trim() !== \"\") {\r\n            setLoading(false)\r\n            await props.addTaskPlanner({ title: newTitle, boardId: board._id }, props.userLogged.token)\r\n            const tasks = await props.getTaskPlannerFromBoard(board._id)\r\n            if (tasks) {\r\n                setAllTasksPlanner(tasks)\r\n                setOpen(!open)\r\n                setNewTitle('')\r\n                setLoading(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (newInvite.trim()) {\r\n            inviteUserToBoard(newInvite, board._id)\r\n            desklyAlert('Success', 'Request Sent!', 'success')\r\n            setNewInvite('')\r\n        }\r\n    }\r\n\r\n    const edit = async (idTaskPlanner, titleTaskPlanner) => {\r\n        await props.editTaskPlanner(idTaskPlanner, titleTaskPlanner)\r\n        tasksFetch()\r\n    }\r\n\r\n    const erase = async (idTaskPlanner) => {\r\n        await props.deleteTaskPlanner(idTaskPlanner)\r\n        tasksFetch()\r\n    }\r\n\r\n    const readUpdateInput = (e) => {\r\n        const field = e.target.name\r\n        const value = e.target.value\r\n        setUpdateInput({\r\n            ...updateInput,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const deleteBoard = async () => {\r\n        await props.deleteBoard(board._id, props.userLogged.token)\r\n        desklyAlert('Info', 'Board deleted!', 'info')\r\n        props.history.push('/myDesk')\r\n    }\r\n\r\n    const editBoard = async () => {\r\n        setLoading(false)\r\n        const response = await props.editBoard(board._id, updateInput, props.userLogged.token)\r\n        setBoard(response)\r\n        setUpdate(true)\r\n        setLoading(true)\r\n    }\r\n    const usersFetch = async () => {\r\n        const users = await props.getUsersFromBoard(idParams)\r\n        const admins = await props.getAdminsFromBoard(idParams)\r\n        setBoardUsers(users)\r\n        setAdmins(admins)\r\n    }\r\n\r\n    const userAdmin = async (email) => {\r\n        const admins = await props.userAdmin(email, idParams)\r\n        setAdmins(admins)\r\n        return admins\r\n    }\r\n\r\n    const archive = async (idTaskPlanner) => {\r\n        await props.recycleTaskPlanner(idTaskPlanner, { archived: true })\r\n        tasksFetch()\r\n    }\r\n\r\n    // const progressBar = async (allTasks) => {\r\n    //     const task = await props.tasksFromTaskplanner(id)\r\n    //     // console.log(task)\r\n    // }\r\n\r\n    let imAdmin = props.boardsAdminArray.some(boardId => boardId === String(board._id))\r\n    let imOwner = props.boardsOwnerArray.some(boardId => boardId === String(board._id))\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const usersVisible = () => {\r\n        setVisible(!visible)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"contenedorBoard\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                    <path fill=\"#f9d85f\" fillOpacity=\"1\" d=\"M0,96L60,96C120,96,240,96,360,117.3C480,139,600,181,720,186.7C840,192,960,160,1080,160C1200,160,1320,192,1380,208L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"></path>\r\n                </svg>\r\n                <LateralMenu setMenuLateral={setMenuLateral} menuLateral={menuLateral} />\r\n                <div className=\"contenedorInfoBoard\">\r\n                    <div className=\"boardMarca\">\r\n                        <span className=\"hamburguerIcon\" onClick={() => setMenuLateral(!menuLateral)}>&#9776; </span>\r\n                        {update && <h2 className=\"logoLink\" style={{ cursor: `${imOwner ? 'pointer' : ''}` }} onClick={imOwner ? (() => { setUpdate(!update); setUpdateInput({ title: board.title }) }) : null}>{board.title}</h2>}\r\n                        {/* {update && <h2 className=\"logoLink\" onClick={() => { setUpdate(!update); setUpdateInput({ title: board.title }) }}>{board.title}</h2>} */}\r\n                        {!update &&\r\n                            <div className=\"updateTitle\">\r\n                                <div className=\"contenedorInputEditTitleBoard\">\r\n                                    <input onKeyDown={loading ? ((e) => enter(e, 'titleBoard')) : null} type=\"text\" name=\"title\" value={updateInput ? updateInput.title : null} onChange={readUpdateInput} />\r\n                                    <span onClick={editBoard} className=\"material-icons-outlined iconoUpdateBoard\">send</span>\r\n                                </div>\r\n                                <span onClick={() => setUpdate(true)} className=\"material-icons-outlined iconoUpdateBoard\">close</span>\r\n                            </div>\r\n                        }\r\n                        <div className=\"userPicName\">\r\n                            <span className=\"userCompleteName\">{`${userFirstName} ${userLastName}`}</span>\r\n                            <div className=\"userPic\" style={{ backgroundImage: `url('${userImg}')` }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"contenedorMenuBoard\">\r\n                        <div className=\"contenedorInfoOwner\">\r\n                            {/* {(imAdmin || imOwner) && <button className=\"buttonOptionsBoard\" onClick={() => setOpenArchive(!openArchive)}><span className=\"material-icons-outlined iconoBoard\">add</span>Archive</button>} */}\r\n                            {\r\n                                openInvite &&\r\n                                <div className=\"inviteUsersVentana\">\r\n                                    <span onClick={() => setOpenInvite(false)} className=\"material-icons-outlined closeGeneric\">close</span>\r\n\r\n                                    <h3>Invite a new member to the board</h3>\r\n\r\n                                    <div className=\"contenedorInputInvite\">\r\n                                        <input onKeyDown={(e) => newInvite.trim() ? enter(e, 'invite') : null} type=\"text\" placeholder=\"email@example.com\" value={newInvite} onChange={(e) => setNewInvite(e.target.value)} autoComplete=\"off\" />\r\n                                        <span onClick={addUser} className=\"material-icons-outlined iconoTaskPlanner\">send</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                imOwner &&\r\n\r\n                                <>\r\n                                    <button className=\"buttonOptionsBoard\" onClick={() => setOpenModal(!openModal)}><span className=\"material-icons-outlined iconoBoard\">delete</span>Delete</button>\r\n                                    {\r\n                                        openModal &&\r\n\r\n                                        <Modal\r\n                                            isOpen={openModal}\r\n                                            // onAfterOpen={afterOpenModal}\r\n                                            onRequestClose={() => setOpenModal(!openModal)}\r\n                                            // style={customStyles}\r\n                                            contentLabel=\"Example Modal\"\r\n                                            className=\"ModalTaskComponent\"\r\n                                            overlayClassName=\"OverlayModal\"\r\n                                        >\r\n                                            <div className='modal modalBoard '>\r\n                                                <span>Are you sure you want to delete this board? This cannot be undone.</span>\r\n                                                <div className=\"deleteButtonsModalTaskPlanner\">\r\n                                                    <button onClick={deleteBoard}>Confirm</button>\r\n                                                    <button onClick={() => setOpenModal(false)}>Cancel</button>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </Modal>\r\n                                    }\r\n\r\n\r\n                                </>\r\n                            }\r\n                            {(imAdmin || imOwner) && <button className=\"buttonOptionsBoard\" onClick={() => setOpenInvite(!openInvite)}><span className=\"material-icons-outlined iconoBoard\">add</span>Invite</button>}\r\n                            {/* {\r\n                                openArchive &&\r\n                                <div className=\"inviteUsersVentana\"  >\r\n                                    <h3>Archived taskplanners</h3>\r\n                                    <div  style={{ display: 'flex', margin: '2rem' , flexDirection:\"column\"}}> <Archive  allTasksPlanner={allTasksPlanner}/></div>\r\n                                </div>\r\n                            } */}\r\n                            {/* </>\r\n                            } */}\r\n                        </div>\r\n                        {imOwner && <>\r\n                            <div onClick={usersVisible} className=\"iconoVisible\">\r\n                                <span className=\"material-icons-outlined iconoUsers\">people_outline</span>\r\n                            </div>\r\n                            <div className=\"ventanaUser\" style={{ visibility: visible ? 'visible' : 'hidden' }} >\r\n                                <span onClick={() => setVisible(false)} className=\"material-icons-outlined closeGeneric\">close</span>\r\n\r\n                                {\r\n                                    boardUsers.length === 1\r\n                                        ? <div className=\"noMembers\">\r\n                                            <p>There are no members yet</p>\r\n                                        </div>\r\n                                        : boardUsers.map((user, i) => {\r\n                                            if (i) {\r\n                                                return <UserAdmin key={i} admins={admins} idParams={idParams} userAdmin={userAdmin} user={user} visible={visible} setVisible={setVisible} />\r\n                                            } else {\r\n                                                return null\r\n                                            }\r\n                                        })\r\n                                }\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                    <div className=\"contenedorTaskPlanner\">\r\n                        <div>\r\n                            {\r\n                                allTasksPlanner.map(taskplanner => <TaskPlanner imAdmin={imAdmin} imOwner={imOwner} erase={erase} edit={edit} key={taskplanner._id} setAllTasksPlanner={setAllTasksPlanner} taskplanner={taskplanner} />)\r\n                            }\r\n                        </div>\r\n                        {(imOwner || imAdmin) &&\r\n                            <>\r\n                                {open && <button className=\"buttonTaskPlanner\" onClick={() => setOpen(!open)}><span className=\"material-icons-outlined iconoAddList\">add</span>Add new list</button>}\r\n                                {\r\n                                    !open &&\r\n                                    <div className=\"contenedorAddList\">\r\n                                        <input className=\"inputAddList\" onKeyDown={loading ? ((e) => enter(e, 'titleTaskPlanner')) : null} type=\"text\" placeholder=\"Introduce a title for the new list\" value={newTitle} onChange={(e) => setNewTitle(e.target.value)} />\r\n                                        <div>\r\n                                            <button className=\"buttonAddList\" onClick={loading ? sendValues : null}>Add new list</button>\r\n                                            <span onClick={() => setOpen(true)} className=\"material-icons-outlined iconoAddListClose\">close</span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"imgBoard\" style={{ backgroundImage: \"url('https://webdesing881317710.files.wordpress.com/2021/05/laptop-1.png')\" }}></div>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"svgWaveRosa\">\r\n                    <path fill=\"#ec9acf\" fillOpacity=\"1\" d=\"M0,160L21.8,170.7C43.6,181,87,203,131,186.7C174.5,171,218,117,262,106.7C305.5,96,349,128,393,160C436.4,192,480,224,524,234.7C567.3,245,611,235,655,229.3C698.2,224,742,224,785,218.7C829.1,213,873,203,916,208C960,213,1004,235,1047,256C1090.9,277,1135,299,1178,277.3C1221.8,256,1265,192,1309,154.7C1352.7,117,1396,107,1418,101.3L1440,96L1440,320L1418.2,320C1396.4,320,1353,320,1309,320C1265.5,320,1222,320,1178,320C1134.5,320,1091,320,1047,320C1003.6,320,960,320,916,320C872.7,320,829,320,785,320C741.8,320,698,320,655,320C610.9,320,567,320,524,320C480,320,436,320,393,320C349.1,320,305,320,262,320C218.2,320,175,320,131,320C87.3,320,44,320,22,320L0,320Z\"></path>\r\n                </svg>\r\n            </div >\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged,\r\n        boards: state.boardReducer.boards,\r\n        boardsAdminArray: state.authReducer.boardsAdminArray,\r\n        boardsOwnerArray: state.authReducer.boardsOwnerArray,\r\n        commentsUserArray: state.authReducer.commentsUserArray,\r\n        taskPlannersArray: state.authReducer.taskPlannersArray,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    editBoard: boardActions.editBoard,\r\n    deleteBoard: boardActions.deleteBoard,\r\n    addTaskPlanner: taskPlannerActions.addTaskPlanner,\r\n    getTaskPlannerFromBoard: taskPlannerActions.getTaskPlannerFromBoard,\r\n    editTaskPlanner: taskPlannerActions.editTaskPlanner,\r\n    deleteTaskPlanner: taskPlannerActions.deleteTaskPlanner,\r\n    inviteUserToBoard: authActions.inviteUserToBoard,\r\n    addUserToBoard: boardActions.addUserToBoard,\r\n    deleteBoardOwner: boardActions.deleteBoardOwner,\r\n    getUsersFromBoard: boardActions.getUsersFromBoard,\r\n    userAdmin: boardActions.userAdmin,\r\n    setUserComponents: authActions.setUserComponents,\r\n    getAdminsFromBoard: boardActions.getAdminsFromBoard,\r\n    recycleTaskPlanner: taskPlannerActions.recycleTaskPlanner\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)","import './sofia.css'\r\nimport './css/lucas.css'\r\nimport './css/kevin.css'\r\n\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Home from './pages/Home'\r\nimport MyDesk from './pages/MyDesk'\r\nimport Sign from './pages/Sign'\r\nimport SignUp from './pages/SignUp'\r\nimport Board from './components/Board'\r\nimport { connect } from 'react-redux'\r\nimport authActions from \"./redux/actions/authActions\"\r\nimport ReactNotification from 'react-notifications-component'\r\n\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\n\r\nconst App = (props) => {\r\n  const { userLogged } = props\r\n  if (userLogged) {\r\n    // aca van links de logueados\r\n  }\r\n  else if (localStorage.getItem('token')) {\r\n    props.reLoad(localStorage.getItem('token'))\r\n    return null\r\n  } else {\r\n    // aca van links de deslogueados\r\n  }\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          {userLogged && <Route path=\"/mydesk\" component={MyDesk} />}\r\n          <Route path=\"/board/:id\" component={Board} />\r\n          {!userLogged && <Route path=\"/sign\" component={Sign} />}\r\n          {!userLogged && <Route path=\"/signup\" component={SignUp} />}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userLogged: state.authReducer.userLogged,\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  reLoad: authActions.signInLocalStorage\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","const initialState = {\r\n    userLogged: null,\r\n    boardsAdminArray:[],\r\n    boardsOwnerArray:[],\r\n    commentsUserArray:[],\r\n    taskPlannersArray:[],\r\n    boardsUserArray:[],\r\n    loading: true\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n       \r\n        case 'LOG_USER':\r\n            localStorage.setItem('userLogged', JSON.stringify({ firstName: action.payload.firstName, userPic: action.payload.img }))\r\n            localStorage.setItem('token', action.payload.token)\r\n            return { ...state, userLogged: action.payload }\r\n\r\n        case 'LOGOUT_USER':\r\n            localStorage.clear()\r\n           \r\n            return { ...state, userLogged: null }\r\n        \r\n        case 'USER_COMPONENTS': \r\n            return { \r\n                ...state, \r\n                boardsAdminArray: action.payload.boardAdminArray, \r\n                boardsOwnerArray: action.payload.boardOwnerId, \r\n                commentsUserArray: action.payload.idComents, \r\n                taskPlannersArray: action.payload.taskPlanners, \r\n                boardsUserArray: action.payload.boardIdUser,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n\r\n","const initialState = {\r\n    boards: []\r\n}\r\nconst boardReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_BOARDS':\r\n            return{\r\n                ...state,\r\n                boards: action.payload\r\n            }\r\n        case 'ADD_BOARDS':\r\n            return{\r\n                ...state,\r\n                boards: [...state.boards, action.payload]                \r\n            }\r\n\r\n        case 'DELETE_BOARDS':\r\n            return{\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id === action.payload)\r\n            }         \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default boardReducer","import { combineReducers } from \"redux\"\r\nimport authReducer from './authReducer'\r\nimport boardReducer from './boardReducer'\r\n\r\nconst rootReducer = combineReducers({ authReducer, boardReducer})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './redux/reducers/rootReducer'\r\n\r\nconst desklyStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={desklyStore}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}